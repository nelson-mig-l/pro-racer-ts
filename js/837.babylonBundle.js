"use strict";(self.webpackChunkpro_racer=self.webpackChunkpro_racer||[]).push([[837],{9837:(e,r,n)=>{n.r(r),n.d(r,{FresnelShaderScene:()=>w,default:()=>u});var o=n(4147),t=n(3579),i=n(972),a=n(6765),s=n(307),l=n(3242),c=n(4684),m=n(3212),d=n(3778),v=n(1552),h=n(3789),p=n(6070);n(1723);class w{constructor(){this.createScene=async(e,r)=>{const w=new o.x(e);Promise.all([n.e(568).then(n.bind(n,1568)),Promise.all([n.e(217),n.e(291),n.e(721),n.e(907),n.e(57),n.e(319),n.e(596)]).then(n.t.bind(n,3596,23))]).then((e=>{console.log(e),w.debugLayer.show({handleResize:!0,overlay:!0,globalRoot:document.getElementById("#root")||void 0})}));const u=new t.Y("my first camera",0,Math.PI/3,10,new i.P(0,0,0),w);u.setTarget(i.P.Zero()),u.attachControl(r,!0);const f=(0,a.Qk)("sphere",{diameter:2,segments:32},w);f.position.y=1,m.Q.ShadersStore.fresnelVertexShader='/**\r\n * Shader sample code based on "Fresnel" template at https://cyos.babylonjs.com\r\n */\r\n\r\nprecision highp float;\r\n\r\n// Attributes\r\nattribute vec3 position;\r\nattribute vec3 normal;\r\n\r\n// Uniforms\r\nuniform mat4 world;\r\nuniform mat4 worldViewProjection;\r\n\r\n// Varying\r\nvarying vec3 vPositionW;\r\nvarying vec3 vNormalW;\r\n\r\nvoid main(void) {\r\n    vec4 outPosition = worldViewProjection * vec4(position, 1.0);\r\n    gl_Position = outPosition;\r\n    \r\n    vPositionW = vec3(world * vec4(position, 1.0));\r\n    vNormalW = normalize(vec3(world * vec4(normal, 0.0)));\r\n}\r\n    ',m.Q.ShadersStore.fresnelFragmentShader='/**\r\n * Shader sample code based on "Fresnel" template at https://cyos.babylonjs.com\r\n */\r\n\r\nprecision highp float;\r\n\r\n// Lights\r\nvarying vec3 vPositionW;\r\nvarying vec3 vNormalW;\r\n\r\n// Refs\r\nuniform vec3 cameraPosition;\r\n\r\nvoid main(void) {\r\n    vec3 color = vec3(1., 1., 1.);\r\n    vec3 viewDirectionW = normalize(cameraPosition - vPositionW);\r\n\r\n    // Fresnel\r\n\tfloat fresnelTerm = dot(viewDirectionW, vNormalW);\r\n\tfresnelTerm = clamp(1.0 - fresnelTerm, 0., 1.);\r\n\r\n    gl_FragColor = vec4(color * fresnelTerm, 1.);\r\n}';const g=new d.j("fresnel",w,{vertex:"fresnel",fragment:"fresnel"},{attributes:["position","normal"],defines:[],samplers:[],uniforms:["cameraPosition","world","worldViewProjection"]});f.material=g;const b=(0,s.$6)("ground",{width:6,height:6},w),P=new l.K("ground material",w);P.diffuseTexture=new c.x(v.Z,w),b.material=P,b.receiveShadows=!0;const y=new h.O("light",new i.P(0,-1,1),w);y.intensity=.5,y.position.y=10;const S=new p.u(512,y);return S.useBlurExponentialShadowMap=!0,S.blurScale=2,S.setDarkness(.2),S.getShadowMap().renderList.push(f),w}}}const u=new w},1552:(e,r,n)=>{n.d(r,{Z:()=>o});const o=n.p+"9b31293ea96c8dfa518b45622da82a13.jpg"}}]);
//# sourceMappingURL=837.babylonBundle.js.map