(self.webpackChunkpro_racer=self.webpackChunkpro_racer||[]).push([[719,976],{7594:(e,i,t)=>{"use strict";t.d(i,{H:()=>s,u:()=>o});var n=t(216);let s;const o=new Promise((e=>{(new n).then((i=>{s=i,e(i)}))}))},5575:(e,i,t)=>{"use strict";t.r(i),t.d(i,{Boxes:()=>a});var n=t(3242),s=t(7417),o=t(9823),r=t(9635);class a{constructor(e){this.scene=e,this.redMaterial=new n.K("RedMaterial",e),this.redMaterial.diffuseColor=new s.Wo(.8,.4,.5),this.redMaterial.emissiveColor=new s.Wo(.8,.4,.5),this.blueMaterial=new n.K("BlueMaterial",e),this.blueMaterial.diffuseColor=new s.Wo(.5,.4,.8),this.blueMaterial.emissiveColor=new s.Wo(.5,.4,.8)}baseBoxes(){this.createBox(new s.P(4,1,12),new s.P(0,0,25),new s.P(-Math.PI/8,0,0),0),this.createBox(new s.P(4,1,12),new s.P(25,0,0),new s.P(-Math.PI/8,Math.PI/2,0),0),this.createBox(new s.P(4,1,12),new s.P(0,0,-25),new s.P(Math.PI/8,0,0),0),this.createBox(new s.P(4,1,12),new s.P(-25,0,0),new s.P(Math.PI/8,Math.PI/2,0),0)}randomBoxes(){const e=new s.P,i=new s.P,t=new s.P;for(let n=0;n<20;n++){const n=300*Math.random()-150+5,s=300*Math.random()-150+5,o=10*Math.random();e.set(o,o,o),i.set(s,0,n),t.set(n,n,n),this.createBox(e,i,t,0)}for(let n=0;n<30;n++){const n=300*Math.random()-150+5,s=300*Math.random()-150+5,o=3*Math.random();e.set(o,o,o),i.set(s,0,n),t.set(n,n,n),this.createBox(e,i,t,5)}}createBox(e,i,t,n){const s=o.V.CreateBox("box",{width:e.x,depth:e.z,height:e.y},this.scene);return s.position.set(i.x,i.y,i.z),s.rotation.set(t.x,t.y,t.z),n?(s.position.y+=5,s.material=this.blueMaterial):(n=0,s.material=this.redMaterial),s.physicsImpostor=new r.Q(s,r.Q.BoxImpostor,{mass:n,friction:.5,restitution:.7},this.scene),s}}},9976:(e,i,t)=>{"use strict";t.r(i),t.d(i,{Car:()=>a});var n=t(7057),s=t(9121),o=t(7417),r=t(9823);class a{constructor(e,i,t){this.ZERO_QUATERNION=new o._f,this.FRONT_LEFT=0,this.FRONT_RIGHT=1,this.BACK_LEFT=2,this.BACK_RIGHT=3,this.chassisWidth=1.8,this.chassisHeight=.6,this.chassisLength=4,this.massVehicle=200,this.wheelAxisPositionBack=-1,this.wheelRadiusBack=.4,this.wheelWidthBack=.3,this.wheelHalfTrackBack=1,this.wheelAxisHeightBack=.4,this.wheelAxisFrontPosition=1,this.wheelHalfTrackFront=1,this.wheelAxisHeightFront=.4,this.wheelRadiusFront=.4,this.wheelWidthFront=.3,this.friction=5,this.suspensionStiffness=10,this.suspensionDamping=.3,this.suspensionCompression=4.4,this.suspensionRestLength=.6,this.rollInfluence=0,this.steeringIncrement=.01,this.steeringClamp=.2,this.maxEngineForce=500,this.maxBreakingForce=10,this.incEngine=10,this.vehicleSteering=0,this.engineForce=0,this.breakingForce=0,this.wheelMeshes=[],this.vehicleReady=!1,this.greenMaterial=new n.StandardMaterial("GreenMaterial",i),this.greenMaterial.diffuseColor=new o.Wo(.5,.8,.5),this.greenMaterial.emissiveColor=new o.Wo(.5,.8,.5),this.blackMaterial=new n.StandardMaterial("BlackMaterial",i),this.blackMaterial.diffuseColor=new o.Wo(.1,.1,.1),this.blackMaterial.emissiveColor=new o.Wo(.1,.1,.1),this.scene=i;const s=i.getPhysicsEngine()?.getPhysicsPlugin().world;this.wheelDirectionCS0=new t.btVector3(0,-1,0),this.wheelAxleCS=new t.btVector3(-1,0,0);const r=new t.btBoxShape(new t.btVector3(.5*this.chassisWidth,.5*this.chassisHeight,.5*this.chassisLength)),a=new t.btTransform;a.setIdentity(),a.setOrigin(new t.btVector3(0,5,0)),a.setRotation(new t.btQuaternion(this.ZERO_QUATERNION.x,this.ZERO_QUATERNION.y,this.ZERO_QUATERNION.z,this.ZERO_QUATERNION.w));const c=new t.btDefaultMotionState(a),h=new t.btVector3(0,0,0);r.calculateLocalInertia(this.massVehicle,h),this.chassisMesh=this.createChassisMesh(this.chassisWidth,this.chassisHeight,this.chassisLength);const l=new t.btVector3(0,.4,0),d=new t.btTransform;d.setIdentity(),d.setOrigin(l);const f=new t.btCompoundShape;f.addChildShape(d,r);const g=new t.btRigidBody(new t.btRigidBodyConstructionInfo(this.massVehicle,c,f,h));g.setActivationState(4),s.addRigidBody(g),this.tuning=new t.btVehicleTuning;const p=new t.btDefaultVehicleRaycaster(s);this.vehicle=new t.btRaycastVehicle(this.tuning,g,p),this.vehicle.setCoordinateSystem(0,1,2),s.addAction(this.vehicle),this.vehicle.getChassisWorldTransform(),this.addWheel(!0,new t.btVector3(this.wheelHalfTrackFront,this.wheelAxisHeightFront,this.wheelAxisFrontPosition),this.wheelRadiusFront,this.wheelWidthFront,this.FRONT_LEFT),this.addWheel(!0,new t.btVector3(-this.wheelHalfTrackFront,this.wheelAxisHeightFront,this.wheelAxisFrontPosition),this.wheelRadiusFront,this.wheelWidthFront,this.FRONT_RIGHT),this.addWheel(!1,new t.btVector3(-this.wheelHalfTrackBack,this.wheelAxisHeightBack,this.wheelAxisPositionBack),this.wheelRadiusBack,this.wheelWidthBack,this.BACK_LEFT),this.addWheel(!1,new t.btVector3(this.wheelHalfTrackBack,this.wheelAxisHeightBack,this.wheelAxisPositionBack),this.wheelRadiusBack,this.wheelWidthBack,this.BACK_RIGHT),this.vehicleReady=!0}createChassisMesh(e,i,t){const n=r.V.CreateBox("box",{width:e,depth:t,height:i},this.scene);n.rotationQuaternion=new o._f,n.material=this.greenMaterial;const a=new s.i("FollowCam",new o.P(0,10,-10),this.scene);return a.radius=10,a.heightOffset=4,a.rotationOffset=0,a.cameraAcceleration=.05,a.maxCameraSpeed=400,a.attachControl(!0),a.lockedTarget=n,this.scene.activeCamera=a,n}addWheel(e,i,t,n,s){const o=this.vehicle.addWheel(i,this.wheelDirectionCS0,this.wheelAxleCS,this.suspensionRestLength,t,this.tuning,e);o.set_m_suspensionStiffness(this.suspensionStiffness),o.set_m_wheelsDampingRelaxation(this.suspensionDamping),o.set_m_wheelsDampingCompression(this.suspensionCompression),o.set_m_maxSuspensionForce(6e5),o.set_m_frictionSlip(40),o.set_m_rollInfluence(this.rollInfluence),this.wheelMeshes[s]=this.createWheelMesh(t,n)}createWheelMesh(e,i){const t=r.V.CreateCylinder("Wheel",{diameter:1,height:.5,tessellation:6},this.scene);return t.rotationQuaternion=new o._f,t.material=this.blackMaterial,t}}},7357:(e,i,t)=>{"use strict";t.r(i),t.d(i,{default:()=>m});var n=t(4147),s=t(156),o=t(972),r=t(5348),a=t(7759),c=(t(703),t(3242)),h=t(9635),l=t(7594),d=t(9823),f=t(7417),g=t(2166),p=t(5575),u=t(9976);const m=new class{constructor(){this.preTasks=[l.u],this.createScene=async(e,i)=>{const t=new n.x(e),m=new s.c("camera1",new o.P(0,5,-10),t);m.setTarget(o.P.Zero()),m.attachControl(i,!0),new r.e("light",new o.P(0,1,0),t).intensity=.7;const v=new c.K("RedMaterial",t);v.diffuseColor=new f.Wo(.8,.4,.5),v.emissiveColor=new f.Wo(.8,.4,.5),t.enablePhysics(new o.P(0,-10,0),new a.b(!0,l.H));const y=d.V.CreateGround("ground",{width:460,height:460,subdivisions:2},t);y.physicsImpostor=new h.Q(y,h.Q.BoxImpostor,{mass:0,friction:.5,restitution:.7},t),y.material=new g.D("groundMaterial",t);const w=new p.Boxes(t);w.baseBoxes(),w.randomBoxes();const x=new Map([["acceleration",!1],["braking",!1],["right",!1],["left",!1]]),P=new Map([["KeyW","acceleration"],["KeyS","braking"],["KeyA","left"],["KeyD","right"]]),C=new u.Car(new o.P(0,4,-20),t,l.H);return window.addEventListener("keydown",(function(e){P.get(e.code)&&x.set(P.get(e.code)??"",!0)})),window.addEventListener("keyup",(function(e){P.get(e.code)&&x.set(P.get(e.code)??"",!1)})),t.registerBeforeRender((function(){if(e.getDeltaTime(),C.vehicleReady){const e=C.vehicle.getCurrentSpeedKmHour();let i,t,n,s;C.breakingForce=0,C.engineForce=0,x.get("acceleration")?e<-1?C.breakingForce=C.maxBreakingForce:C.engineForce=C.maxEngineForce:x.get("braking")&&(e>1?C.breakingForce=C.maxBreakingForce:C.engineForce=-C.maxEngineForce),x.get("right")?C.vehicleSteering<C.steeringClamp&&(C.vehicleSteering+=C.steeringIncrement):x.get("left")?C.vehicleSteering>-C.steeringClamp&&(C.vehicleSteering-=C.steeringIncrement):C.vehicleSteering=0,C.vehicle.applyEngineForce(C.engineForce,C.FRONT_LEFT),C.vehicle.applyEngineForce(C.engineForce,C.FRONT_RIGHT),C.vehicle.setBrake(C.breakingForce/2,C.FRONT_LEFT),C.vehicle.setBrake(C.breakingForce/2,C.FRONT_RIGHT),C.vehicle.setBrake(C.breakingForce,C.BACK_LEFT),C.vehicle.setBrake(C.breakingForce,C.BACK_RIGHT),C.vehicle.setSteeringValue(C.vehicleSteering,C.FRONT_LEFT),C.vehicle.setSteeringValue(C.vehicleSteering,C.FRONT_RIGHT);const o=C.vehicle.getNumWheels();for(s=0;s<o;s++)C.vehicle.updateWheelTransform(s,!0),i=C.vehicle.getWheelTransformWS(s),t=i.getOrigin(),n=i.getRotation(),C.wheelMeshes[s].position.set(t.x(),t.y(),t.z()),C.wheelMeshes[s].rotationQuaternion?.set(n.x(),n.y(),n.z(),n.w()),C.wheelMeshes[s].rotate(f.RD.Z,Math.PI/2);i=C.vehicle.getChassisWorldTransform(),t=i.getOrigin(),n=i.getRotation(),C.chassisMesh.position.set(t.x(),t.y(),t.z()),C.chassisMesh.rotationQuaternion?.set(n.x(),n.y(),n.z(),n.w()),C.chassisMesh.rotate(f.RD.X,Math.PI)}})),t}}}},4207:()=>{},297:()=>{},2166:(e,i,t)=>{"use strict";t.d(i,{D:()=>u});var n=t(3555),s=t(6786),o=t(972),r=t(9859),a=t(3478),c=t(6721),h=t(569),l=t(3243),d=t(7959),f=t(9827),g=t(3127);t(796),t(5289),t(1410);g.v.ShadersStore.gridPixelShader="#extension GL_OES_standard_derivatives : enable\n#define SQRT2 1.41421356\n#define PI 3.14159\nprecision highp float;\nuniform float visibility;\nuniform vec3 mainColor;\nuniform vec3 lineColor;\nuniform vec4 gridControl;\nuniform vec3 gridOffset;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n#include<fogFragmentDeclaration>\n#ifdef OPACITY\nvarying vec2 vOpacityUV;\nuniform sampler2D opacitySampler;\nuniform vec2 vOpacityInfos;\n#endif\nfloat getDynamicVisibility(float position) {\nfloat majorGridFrequency=gridControl.y;\nif (floor(position+0.5)==floor(position/majorGridFrequency+0.5)*majorGridFrequency)\n{\nreturn 1.0;\n} \nreturn gridControl.z;\n}\nfloat getAnisotropicAttenuation(float differentialLength) {\nconst float maxNumberOfLines=10.0;\nreturn clamp(1.0/(differentialLength+1.0)-1.0/maxNumberOfLines,0.0,1.0);\n}\nfloat isPointOnLine(float position,float differentialLength) {\nfloat fractionPartOfPosition=position-floor(position+0.5); \nfractionPartOfPosition/=differentialLength; \nfractionPartOfPosition=clamp(fractionPartOfPosition,-1.,1.);\nfloat result=0.5+0.5*cos(fractionPartOfPosition*PI); \nreturn result; \n}\nfloat contributionOnAxis(float position) {\nfloat differentialLength=length(vec2(dFdx(position),dFdy(position)));\ndifferentialLength*=SQRT2; \nfloat result=isPointOnLine(position,differentialLength);\nfloat dynamicVisibility=getDynamicVisibility(position);\nresult*=dynamicVisibility;\nfloat anisotropicAttenuation=getAnisotropicAttenuation(differentialLength);\nresult*=anisotropicAttenuation;\nreturn result;\n}\nfloat normalImpactOnAxis(float x) {\nfloat normalImpact=clamp(1.0-3.0*abs(x*x*x),0.0,1.0);\nreturn normalImpact;\n}\n#define CUSTOM_FRAGMENT_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\nfloat gridRatio=gridControl.x;\nvec3 gridPos=(vPosition+gridOffset.xyz)/gridRatio;\nfloat x=contributionOnAxis(gridPos.x);\nfloat y=contributionOnAxis(gridPos.y);\nfloat z=contributionOnAxis(gridPos.z);\nvec3 normal=normalize(vNormal);\nx*=normalImpactOnAxis(normal.x);\ny*=normalImpactOnAxis(normal.y);\nz*=normalImpactOnAxis(normal.z);\n#ifdef MAX_LINE \nfloat grid=clamp(max(max(x,y),z),0.,1.);\n#else\nfloat grid=clamp(x+y+z,0.,1.);\n#endif\nvec3 color=mix(mainColor,lineColor,grid);\n#ifdef FOG\n#include<fogFragment>\n#endif\nfloat opacity=1.0;\n#ifdef TRANSPARENT\nopacity=clamp(grid,0.08,gridControl.w*grid);\n#endif \n#ifdef OPACITY\nopacity*=texture2D(opacitySampler,vOpacityUV).a;\n#endif \ngl_FragColor=vec4(color.rgb,opacity*visibility);\n#ifdef TRANSPARENT\n#ifdef PREMULTIPLYALPHA\ngl_FragColor.rgb*=opacity;\n#endif\n#else \n#endif\n#include<imageProcessingCompatibility>\n#define CUSTOM_FRAGMENT_MAIN_END\n}\n",t(3816),t(4667),t(7154),t(7761);g.v.ShadersStore.gridVertexShader="precision highp float;\nattribute vec3 position;\nattribute vec3 normal;\n#ifdef UV1\nattribute vec2 uv;\n#endif\n#ifdef UV2\nattribute vec2 uv2;\n#endif\n#include<instancesDeclaration>\nuniform mat4 projection;\nuniform mat4 view;\nvarying vec3 vPosition;\nvarying vec3 vNormal;\n#include<fogVertexDeclaration>\n#ifdef OPACITY\nvarying vec2 vOpacityUV;\nuniform mat4 opacityMatrix;\nuniform vec2 vOpacityInfos;\n#endif\n#define CUSTOM_VERTEX_DEFINITIONS\nvoid main(void) {\n#define CUSTOM_VERTEX_MAIN_BEGIN\n#include<instancesVertex>\nvec4 worldPos=finalWorld*vec4(position,1.0);\n#include<fogVertex>\nvec4 cameraSpacePosition=view*worldPos;\ngl_Position=projection*cameraSpacePosition;\n#ifdef OPACITY\n#ifndef UV1\nvec2 uv=vec2(0.,0.);\n#endif\n#ifndef UV2\nvec2 uv2=vec2(0.,0.);\n#endif\nif (vOpacityInfos.x==0.)\n{\nvOpacityUV=vec2(opacityMatrix*vec4(uv,1.0,0.0));\n}\nelse\n{\nvOpacityUV=vec2(opacityMatrix*vec4(uv2,1.0,0.0));\n}\n#endif \nvPosition=position;\nvNormal=normal;\n#define CUSTOM_VERTEX_MAIN_END\n}";class p extends a.H{constructor(){super(),this.OPACITY=!1,this.TRANSPARENT=!1,this.FOG=!1,this.PREMULTIPLYALPHA=!1,this.MAX_LINE=!1,this.UV1=!1,this.UV2=!1,this.INSTANCES=!1,this.THIN_INSTANCES=!1,this.IMAGEPROCESSINGPOSTPROCESS=!1,this.SKIPFINALCOLORCLAMP=!1,this.rebuild()}}class u extends h.a{constructor(e,i){super(e,i),this.mainColor=r.Wo.Black(),this.lineColor=r.Wo.Teal(),this.gridRatio=1,this.gridOffset=o.P.Zero(),this.majorUnitFrequency=10,this.minorUnitVisibility=.33,this.opacity=1,this.preMultiplyAlpha=!1,this.useMaxLine=!1,this._gridControl=new o.Lt(this.gridRatio,this.majorUnitFrequency,this.minorUnitVisibility,this.opacity)}needAlphaBlending(){return this.opacity<1||this._opacityTexture&&this._opacityTexture.isReady()}needAlphaBlendingForMesh(e){return e.visibility<1||this.needAlphaBlending()}isReadyForSubMesh(e,i,t){if(this.isFrozen&&i.effect&&i.effect._wasPreviouslyReady&&i.effect._wasPreviouslyUsingInstances===t)return!0;i.materialDefines||(i.materialDefines=new p);const n=i.materialDefines,s=this.getScene();if(this._isReadyForSubMesh(i))return!0;if(n.TRANSPARENT!==this.opacity<1&&(n.TRANSPARENT=!n.TRANSPARENT,n.markAsUnprocessed()),n.PREMULTIPLYALPHA!=this.preMultiplyAlpha&&(n.PREMULTIPLYALPHA=!n.PREMULTIPLYALPHA,n.markAsUnprocessed()),n.MAX_LINE!==this.useMaxLine&&(n.MAX_LINE=!n.MAX_LINE,n.markAsUnprocessed()),n._areTexturesDirty&&(n._needUVs=!1,s.texturesEnabled&&this._opacityTexture&&l.k.OpacityTextureEnabled)){if(!this._opacityTexture.isReady())return!1;n._needUVs=!0,n.OPACITY=!0}if(c.G.PrepareDefinesForMisc(e,s,!1,!1,this.fogEnabled,!1,n),c.G.PrepareDefinesForFrameBoundValues(s,s.getEngine(),n,!!t),n.isDirty){n.markAsProcessed(),s.resetCachedMaterial(),c.G.PrepareDefinesForAttributes(e,n,!1,!1);const t=[d.o.PositionKind,d.o.NormalKind];n.UV1&&t.push(d.o.UVKind),n.UV2&&t.push(d.o.UV2Kind),n.IMAGEPROCESSINGPOSTPROCESS=s.imageProcessingConfiguration.applyByPostProcess,c.G.PrepareAttributesForInstances(t,n);const o=n.toString();i.setEffect(s.getEngine().createEffect("grid",t,["projection","mainColor","lineColor","gridControl","gridOffset","vFogInfos","vFogColor","world","view","opacityMatrix","vOpacityInfos","visibility"],["opacitySampler"],o,void 0,this.onCompiled,this.onError),n,this._materialContext)}return!(!i.effect||!i.effect.isReady()||(n._renderId=s.getRenderId(),i.effect._wasPreviouslyReady=!0,i.effect._wasPreviouslyUsingInstances=!!t,0))}bindForSubMesh(e,i,t){const n=this.getScene(),s=t.materialDefines;if(!s)return;const o=t.effect;o&&(this._activeEffect=o,this._activeEffect.setFloat("visibility",i.visibility),s.INSTANCES&&!s.THIN_INSTANCE||this.bindOnlyWorldMatrix(e),this._activeEffect.setMatrix("view",n.getViewMatrix()),this._activeEffect.setMatrix("projection",n.getProjectionMatrix()),this._mustRebind(n,o)&&(this._activeEffect.setColor3("mainColor",this.mainColor),this._activeEffect.setColor3("lineColor",this.lineColor),this._activeEffect.setVector3("gridOffset",this.gridOffset),this._gridControl.x=this.gridRatio,this._gridControl.y=Math.round(this.majorUnitFrequency),this._gridControl.z=this.minorUnitVisibility,this._gridControl.w=this.opacity,this._activeEffect.setVector4("gridControl",this._gridControl),this._opacityTexture&&l.k.OpacityTextureEnabled&&(this._activeEffect.setTexture("opacitySampler",this._opacityTexture),this._activeEffect.setFloat2("vOpacityInfos",this._opacityTexture.coordinatesIndex,this._opacityTexture.level),this._activeEffect.setMatrix("opacityMatrix",this._opacityTexture.getTextureMatrix()))),c.G.BindFogParameters(n,i,this._activeEffect),this._afterBind(i,this._activeEffect))}dispose(e){super.dispose(e)}clone(e){return s.p4.Clone((()=>new u(e,this.getScene())),this)}serialize(){const e=super.serialize();return e.customType="BABYLON.GridMaterial",e}getClassName(){return"GridMaterial"}static Parse(e,i,t){return s.p4.Parse((()=>new u(e.name,i)),e,i,t)}}(0,n.gn)([(0,s.n9)()],u.prototype,"mainColor",void 0),(0,n.gn)([(0,s.n9)()],u.prototype,"lineColor",void 0),(0,n.gn)([(0,s.qC)()],u.prototype,"gridRatio",void 0),(0,n.gn)([(0,s.hd)()],u.prototype,"gridOffset",void 0),(0,n.gn)([(0,s.qC)()],u.prototype,"majorUnitFrequency",void 0),(0,n.gn)([(0,s.qC)()],u.prototype,"minorUnitVisibility",void 0),(0,n.gn)([(0,s.qC)()],u.prototype,"opacity",void 0),(0,n.gn)([(0,s.qC)()],u.prototype,"preMultiplyAlpha",void 0),(0,n.gn)([(0,s.qC)()],u.prototype,"useMaxLine",void 0),(0,n.gn)([(0,s.oU)("opacityTexture")],u.prototype,"_opacityTexture",void 0),(0,n.gn)([(0,s.wz)("_markAllSubMeshesAsTexturesDirty")],u.prototype,"opacityTexture",void 0),(0,f.H)("BABYLON.GridMaterial",u)}}]);
//# sourceMappingURL=719.babylonBundle.js.map