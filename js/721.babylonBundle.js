"use strict";(self.webpackChunkpro_racer=self.webpackChunkpro_racer||[]).push([[721],{7966:(e,t,s)=>{s.d(t,{KY:()=>c,VF:()=>i,iz:()=>l});var o=s(4517),a=s(972),r=s(3632),n=s(3027);function i(e={subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6}){const t=Math.max(e.subdivisions?e.subdivisions:2,1),s=Math.max(e.tessellation?e.tessellation:16,3),r=Math.max(e.height?e.height:1,0),i=Math.max(e.radius?e.radius:.25,0),l=Math.max(e.capSubdivisions?e.capSubdivisions:6,1),c=s,h=t,u=Math.max(e.radiusTop?e.radiusTop:i,0),d=Math.max(e.radiusBottom?e.radiusBottom:i,0),p=r-(u+d),x=2*Math.PI,f=Math.max(e.topCapSubdivisions?e.topCapSubdivisions:l,1),O=Math.max(e.bottomCapSubdivisions?e.bottomCapSubdivisions:l,1),g=Math.acos((d-u)/r);let m=[];const y=[],A=[],v=[];let T=0;const P=[],_=.5*p,I=.5*Math.PI;let b,F;const w=a.P.Zero(),D=a.P.Zero(),M=Math.cos(g),K=Math.sin(g),C=new a.FM(u*K,_+u*M).subtract(new a.FM(d*K,d*M-_)).length(),L=u*g+C+d*(I-g);let E=0;for(F=0;F<=f;F++){const e=[],t=I-g*(F/f);E+=u*g/f;const s=Math.cos(t),o=Math.sin(t),a=s*u;for(b=0;b<=c;b++){const t=b/c,r=t*x+0,i=Math.sin(r),l=Math.cos(r);D.x=a*i,D.y=_+o*u,D.z=a*l,y.push(D.x,D.y,D.z),w.set(s*i,o,s*l),A.push(w.x,w.y,w.z),v.push(t,n.e.UseOpenGLOrientationForUV?E/L:1-E/L),e.push(T),T++}P.push(e)}const j=r-u-d+M*u-M*d,B=K*(d-u)/j;for(F=1;F<=h;F++){const e=[];E+=C/h;const t=K*(F*(d-u)/h+u);for(b=0;b<=c;b++){const s=b/c,o=s*x+0,a=Math.sin(o),r=Math.cos(o);D.x=t*a,D.y=_+M*u-F*j/h,D.z=t*r,y.push(D.x,D.y,D.z),w.set(a,B,r).normalize(),A.push(w.x,w.y,w.z),v.push(s,n.e.UseOpenGLOrientationForUV?E/L:1-E/L),e.push(T),T++}P.push(e)}for(F=1;F<=O;F++){const e=[],t=I-g-(Math.PI-g)*(F/O);E+=d*g/O;const s=Math.cos(t),o=Math.sin(t),a=s*d;for(b=0;b<=c;b++){const t=b/c,r=t*x+0,i=Math.sin(r),l=Math.cos(r);D.x=a*i,D.y=o*d-_,D.z=a*l,y.push(D.x,D.y,D.z),w.set(s*i,o,s*l),A.push(w.x,w.y,w.z),v.push(t,n.e.UseOpenGLOrientationForUV?E/L:1-E/L),e.push(T),T++}P.push(e)}for(b=0;b<c;b++)for(F=0;F<f+h+O;F++){const e=P[F][b],t=P[F+1][b],s=P[F+1][b+1],o=P[F][b+1];m.push(e),m.push(t),m.push(o),m.push(t),m.push(s),m.push(o)}if(m=m.reverse(),e.orientation&&!e.orientation.equals(a.P.Up())){const t=new a.y3;e.orientation.clone().scale(.5*Math.PI).cross(a.P.Up()).toQuaternion().toRotationMatrix(t);const s=a.P.Zero();for(let e=0;e<y.length;e+=3)s.set(y[e],y[e+1],y[e+2]),a.P.TransformCoordinatesToRef(s.clone(),t,s),y[e]=s.x,y[e+1]=s.y,y[e+2]=s.z}const z=new o.x;return z.positions=y,z.normals=A,z.uvs=v,z.indices=m,z}function l(e,t={orientation:a.P.Up(),subdivisions:2,tessellation:16,height:1,radius:.25,capSubdivisions:6,updatable:!1},s=null){const o=new r.Kj(e,s);return i(t).applyToMesh(o,t.updatable),o}const c={CreateCapsule:l};r.Kj.CreateCapsule=(e,t,s)=>l(e,t,s),o.x.CreateCapsule=i},6565:(e,t,s)=>{s.d(t,{H6:()=>d,wf:()=>u,zD:()=>h});var o=s(972),a=s(9859),r=s(3632),n=s(4517),i=s(4147),l=s(730),c=s(3027);function h(e){const t=e.height||2;let s=0===e.diameterTop?0:e.diameterTop||e.diameter||1,i=0===e.diameterBottom?0:e.diameterBottom||e.diameter||1;s=s||1e-5,i=i||1e-5;const h=e.tessellation||24,u=e.subdivisions||1,d=!!e.hasRings,p=!!e.enclose,x=0===e.cap?0:e.cap||r.Kj.CAP_ALL,f=e.arc&&(e.arc<=0||e.arc>1)?1:e.arc||1,O=0===e.sideOrientation?0:e.sideOrientation||n.x.DEFAULTSIDE,g=e.faceUV||new Array(3),m=e.faceColors,y=2+(1+(1!==f&&p?2:0))*(d?u:1);let A;for(A=0;A<y;A++)m&&void 0===m[A]&&(m[A]=new a.HE(1,1,1,1));for(A=0;A<y;A++)g&&void 0===g[A]&&(g[A]=new o.Lt(0,0,1,1));const v=new Array,T=new Array,P=new Array,_=new Array,I=new Array,b=2*Math.PI*f/h;let F,w,D;const M=(i-s)/2/t,K=o.P.Zero(),C=o.P.Zero(),L=o.P.Zero(),E=o.P.Zero(),j=o.P.Zero(),B=l.RD.Y;let z,V,R,U=1,S=1,N=0,W=0;for(z=0;z<=u;z++)for(w=z/u,D=(w*(s-i)+i)/2,U=d&&0!==z&&z!==u?2:1,R=0;R<U;R++){for(d&&(S+=R),p&&(S+=2*R),V=0;V<=h;V++)F=V*b,K.x=Math.cos(-F)*D,K.y=-t/2+w*t,K.z=Math.sin(-F)*D,0===s&&z===u?(C.x=P[P.length-3*(h+1)],C.y=P[P.length-3*(h+1)+1],C.z=P[P.length-3*(h+1)+2]):(C.x=K.x,C.z=K.z,C.y=Math.sqrt(C.x*C.x+C.z*C.z)*M,C.normalize()),0===V&&(L.copyFrom(K),E.copyFrom(C)),T.push(K.x,K.y,K.z),P.push(C.x,C.y,C.z),W=d?N!==S?g[S].y:g[S].w:g[S].y+(g[S].w-g[S].y)*w,_.push(g[S].x+(g[S].z-g[S].x)*V/h,c.e.UseOpenGLOrientationForUV?1-W:W),m&&I.push(m[S].r,m[S].g,m[S].b,m[S].a);1!==f&&p&&(T.push(K.x,K.y,K.z),T.push(0,K.y,0),T.push(0,K.y,0),T.push(L.x,L.y,L.z),o.P.CrossToRef(B,C,j),j.normalize(),P.push(j.x,j.y,j.z,j.x,j.y,j.z),o.P.CrossToRef(E,B,j),j.normalize(),P.push(j.x,j.y,j.z,j.x,j.y,j.z),W=d?N!==S?g[S+1].y:g[S+1].w:g[S+1].y+(g[S+1].w-g[S+1].y)*w,_.push(g[S+1].x,c.e.UseOpenGLOrientationForUV?1-W:W),_.push(g[S+1].z,c.e.UseOpenGLOrientationForUV?1-W:W),W=d?N!==S?g[S+2].y:g[S+2].w:g[S+2].y+(g[S+2].w-g[S+2].y)*w,_.push(g[S+2].x,c.e.UseOpenGLOrientationForUV?1-W:W),_.push(g[S+2].z,c.e.UseOpenGLOrientationForUV?1-W:W),m&&(I.push(m[S+1].r,m[S+1].g,m[S+1].b,m[S+1].a),I.push(m[S+1].r,m[S+1].g,m[S+1].b,m[S+1].a),I.push(m[S+2].r,m[S+2].g,m[S+2].b,m[S+2].a),I.push(m[S+2].r,m[S+2].g,m[S+2].b,m[S+2].a))),N!==S&&(N=S)}const G=1!==f&&p?h+4:h;for(z=0,S=0;S<u;S++){let e=0,t=0,s=0,o=0;for(V=0;V<h;V++)e=z*(G+1)+V,t=(z+1)*(G+1)+V,s=z*(G+1)+(V+1),o=(z+1)*(G+1)+(V+1),v.push(e,t,s),v.push(o,s,t);1!==f&&p&&(v.push(e+2,t+2,s+2),v.push(o+2,s+2,t+2),v.push(e+4,t+4,s+4),v.push(o+4,s+4,t+4)),z=d?z+2:z+1}const Y=e=>{const a=e?s/2:i/2;if(0===a)return;let r,n,l;const u=e?g[y-1]:g[0];let d=null;m&&(d=e?m[y-1]:m[0]);const p=T.length/3,x=e?t/2:-t/2,O=new o.P(0,x,0);T.push(O.x,O.y,O.z),P.push(0,e?1:-1,0);const A=u.y+.5*(u.w-u.y);_.push(u.x+.5*(u.z-u.x),c.e.UseOpenGLOrientationForUV?1-A:A),d&&I.push(d.r,d.g,d.b,d.a);const b=new o.FM(.5,.5);for(l=0;l<=h;l++){r=2*Math.PI*l*f/h;const t=Math.cos(-r),s=Math.sin(-r);n=new o.P(t*a,x,s*a);const i=new o.FM(t*b.x+.5,s*b.y+.5);T.push(n.x,n.y,n.z),P.push(0,e?1:-1,0);const p=u.y+(u.w-u.y)*i.y;_.push(u.x+(u.z-u.x)*i.x,c.e.UseOpenGLOrientationForUV?1-p:p),d&&I.push(d.r,d.g,d.b,d.a)}for(l=0;l<h;l++)e?(v.push(p),v.push(p+(l+2)),v.push(p+(l+1))):(v.push(p),v.push(p+(l+1)),v.push(p+(l+2)))};x!==r.Kj.CAP_START&&x!==r.Kj.CAP_ALL||Y(!1),x!==r.Kj.CAP_END&&x!==r.Kj.CAP_ALL||Y(!0),n.x._ComputeSides(O,T,v,P,_,e.frontUVs,e.backUVs);const Z=new n.x;return Z.indices=v,Z.positions=T,Z.normals=P,Z.uvs=_,m&&(Z.colors=I),Z}function u(e,t={},s){const o=new r.Kj(e,s);return t.sideOrientation=r.Kj._GetDefaultSideOrientation(t.sideOrientation),o._originalBuilderSideOrientation=t.sideOrientation,h(t).applyToMesh(o,t.updatable),o}const d={CreateCylinder:u};n.x.CreateCylinder=h,r.Kj.CreateCylinder=(e,t,s,o,a,n,l,c,h)=>(void 0!==l&&l instanceof i.x||(void 0!==l&&(h=c||r.Kj.DEFAULTSIDE,c=l),l=n,n=1),u(e,{height:t,diameterTop:s,diameterBottom:o,tessellation:a,subdivisions:n,sideOrientation:h,updatable:c},l))},1724:(e,t,s)=>{s.d(t,{l:()=>g,t:()=>O});var o=s(972),a=s(1865),r=s(3632),n=s(7959),i=s(4517),l=s(3027);const c=new o.P(1,0,0),h=new o.P(-1,0,0),u=new o.P(0,1,0),d=new o.P(0,-1,0),p=new o.P(0,0,1),x=new o.P(0,0,-1);class f{constructor(e=o.P.Zero(),t=o.P.Up(),s=o.FM.Zero(),a=0,r=0,n=null,i=null,l=null,c=null){this.position=e,this.normal=t,this.uv=s,this.vertexIdx=a,this.vertexIdxForBones=r,this.localPositionOverride=n,this.localNormalOverride=i,this.matrixIndicesOverride=l,this.matrixWeightsOverride=c}clone(){var e,t,s,o;return new f(this.position.clone(),this.normal.clone(),this.uv.clone(),this.vertexIdx,this.vertexIdxForBones,null===(e=this.localPositionOverride)||void 0===e?void 0:e.slice(),null===(t=this.localNormalOverride)||void 0===t?void 0:t.slice(),null===(s=this.matrixIndicesOverride)||void 0===s?void 0:s.slice(),null===(o=this.matrixWeightsOverride)||void 0===o?void 0:o.slice())}}function O(e,t,s){const O=!!t.skeleton,g=s.localMode||O,m=null!==t.overrideMaterialSideOrientation&&void 0!==t.overrideMaterialSideOrientation,y=t.getIndices(),A=O?t.getPositionData(!0,!0):t.getVerticesData(n.o.PositionKind),v=O?t.getNormalsData(!0,!0):t.getVerticesData(n.o.NormalKind),T=g?O?t.getVerticesData(n.o.PositionKind):A:null,P=g?O?t.getVerticesData(n.o.NormalKind):v:null,_=t.getVerticesData(n.o.UVKind),I=O?t.getVerticesData(n.o.MatricesIndicesKind):null,b=O?t.getVerticesData(n.o.MatricesWeightsKind):null,F=O?t.getVerticesData(n.o.MatricesIndicesExtraKind):null,w=O?t.getVerticesData(n.o.MatricesWeightsExtraKind):null,D=s.position||o.P.Zero();let M=s.normal||o.P.Up();const K=s.size||o.P.One(),C=s.angle||0;if(!M){const e=new o.P(0,0,1),s=t.getScene().activeCamera,a=o.P.TransformCoordinates(e,s.getWorldMatrix());M=s.globalPosition.subtract(a)}const L=-Math.atan2(M.z,M.x)-Math.PI/2,E=Math.sqrt(M.x*M.x+M.z*M.z),j=Math.atan2(M.y,E),B=o.y3.RotationYawPitchRoll(L,j,C).multiply(o.y3.Translation(D.x,D.y,D.z)),z=o.y3.Invert(B),V=t.getWorldMatrix().multiply(z),R=new i.x;R.indices=[],R.positions=[],R.normals=[],R.uvs=[],R.matricesIndices=O?[]:null,R.matricesWeights=O?[]:null,R.matricesIndicesExtra=F?[]:null,R.matricesWeightsExtra=w?[]:null;let U=0;const S=e=>{const t=new f;if(!y||!A||!v)return t;const a=y[e];if(t.vertexIdx=3*a,t.vertexIdxForBones=4*a,t.position=new o.P(A[3*a],A[3*a+1],A[3*a+2]),o.P.TransformCoordinatesToRef(t.position,V,t.position),t.normal=new o.P(v[3*a],v[3*a+1],v[3*a+2]),o.P.TransformNormalToRef(t.normal,V,t.normal),s.captureUVS&&_){const e=_[2*a+1];t.uv=new o.FM(_[2*a],l.e.UseOpenGLOrientationForUV?1-e:e)}return t},N=[0,0,0,0],W=(e,t)=>{if(0===e.length)return e;const s=.5*Math.abs(o.P.Dot(K,t)),r=(e,t,s,o)=>{for(let a=0;a<o;++a)if(e[s+a]===t)return s+a;return-1},n=(e,n)=>{var i,l,c,h,u,d,p,x,O,g,m,y,A,v,_,F;const w=o.P.GetClipFactor(e.position,n.position,t,s);let D=N,M=N;if(I&&b){const t=e.matrixIndicesOverride?0:e.vertexIdxForBones,s=null!==(i=e.matrixIndicesOverride)&&void 0!==i?i:I,o=null!==(l=e.matrixWeightsOverride)&&void 0!==l?l:b,u=n.matrixIndicesOverride?0:n.vertexIdxForBones,d=null!==(c=n.matrixIndicesOverride)&&void 0!==c?c:I,p=null!==(h=n.matrixWeightsOverride)&&void 0!==h?h:b;D=[0,0,0,0],M=[0,0,0,0];let x=0;for(let e=0;e<4;++e)if(o[t+e]>0){const n=r(d,s[t+e],u,4);D[x]=s[t+e],M[x]=a.R.Lerp(o[t+e],n>=0?p[n]:0,w),x++}for(let e=0;e<4&&x<4;++e){const o=d[u+e];-1===r(s,o,t,4)&&(D[x]=o,M[x]=a.R.Lerp(0,p[u+e],w),x++)}const f=M[0]+M[1]+M[2]+M[3];M[0]/=f,M[1]/=f,M[2]/=f,M[3]/=f}const K=e.localPositionOverride?e.localPositionOverride[0]:null!==(u=null==T?void 0:T[e.vertexIdx])&&void 0!==u?u:0,C=e.localPositionOverride?e.localPositionOverride[1]:null!==(d=null==T?void 0:T[e.vertexIdx+1])&&void 0!==d?d:0,L=e.localPositionOverride?e.localPositionOverride[2]:null!==(p=null==T?void 0:T[e.vertexIdx+2])&&void 0!==p?p:0,E=n.localPositionOverride?n.localPositionOverride[0]:null!==(x=null==T?void 0:T[n.vertexIdx])&&void 0!==x?x:0,j=n.localPositionOverride?n.localPositionOverride[1]:null!==(O=null==T?void 0:T[n.vertexIdx+1])&&void 0!==O?O:0,B=n.localPositionOverride?n.localPositionOverride[2]:null!==(g=null==T?void 0:T[n.vertexIdx+2])&&void 0!==g?g:0,z=e.localNormalOverride?e.localNormalOverride[0]:null!==(m=null==P?void 0:P[e.vertexIdx])&&void 0!==m?m:0,V=e.localNormalOverride?e.localNormalOverride[1]:null!==(y=null==P?void 0:P[e.vertexIdx+1])&&void 0!==y?y:0,R=e.localNormalOverride?e.localNormalOverride[2]:null!==(A=null==P?void 0:P[e.vertexIdx+2])&&void 0!==A?A:0,U=z+((n.localNormalOverride?n.localNormalOverride[0]:null!==(v=null==P?void 0:P[n.vertexIdx])&&void 0!==v?v:0)-z)*w,S=V+((n.localNormalOverride?n.localNormalOverride[1]:null!==(_=null==P?void 0:P[n.vertexIdx+1])&&void 0!==_?_:0)-V)*w,W=R+((n.localNormalOverride?n.localNormalOverride[2]:null!==(F=null==P?void 0:P[n.vertexIdx+2])&&void 0!==F?F:0)-R)*w,G=Math.sqrt(U*U+S*S+W*W);return new f(o.P.Lerp(e.position,n.position,w),o.P.Lerp(e.normal,n.normal,w).normalize(),o.FM.Lerp(e.uv,n.uv,w),-1,-1,T?[K+(E-K)*w,C+(j-C)*w,L+(B-L)*w]:null,P?[U/G,S/G,W/G]:null,D,M)};let i=null;e.length>3&&(i=new Array);for(let a=0;a<e.length;a+=3){let r=0,l=null,c=null,h=null,u=null;const d=o.P.Dot(e[a].position,t)-s>0,p=o.P.Dot(e[a+1].position,t)-s>0,x=o.P.Dot(e[a+2].position,t)-s>0;switch(r=(d?1:0)+(p?1:0)+(x?1:0),r){case 0:e.length>3?(i.push(e[a]),i.push(e[a+1]),i.push(e[a+2])):i=e;break;case 1:if(i=null!=i?i:new Array,d&&(l=e[a+1],c=e[a+2],h=n(e[a],l),u=n(e[a],c)),p){l=e[a],c=e[a+2],h=n(e[a+1],l),u=n(e[a+1],c),i.push(h),i.push(c.clone()),i.push(l.clone()),i.push(c.clone()),i.push(h.clone()),i.push(u);break}x&&(l=e[a],c=e[a+1],h=n(e[a+2],l),u=n(e[a+2],c)),l&&c&&h&&u&&(i.push(l.clone()),i.push(c.clone()),i.push(h),i.push(u),i.push(h.clone()),i.push(c.clone()));break;case 2:i=null!=i?i:new Array,d||(l=e[a].clone(),c=n(l,e[a+1]),h=n(l,e[a+2]),i.push(l),i.push(c),i.push(h)),p||(l=e[a+1].clone(),c=n(l,e[a+2]),h=n(l,e[a]),i.push(l),i.push(c),i.push(h)),x||(l=e[a+2].clone(),c=n(l,e[a]),h=n(l,e[a+1]),i.push(l),i.push(c),i.push(h))}}return i},G=new Array(3);for(let e=0;e<y.length;e+=3){let t=G;if(t[0]=S(e),m&&g?(t[1]=S(e+2),t[2]=S(e+1)):(t[1]=S(e+1),t[2]=S(e+2)),!(s.cullBackFaces&&-t[0].normal.z<=0&&-t[1].normal.z<=0&&-t[2].normal.z<=0)&&(t=W(t,c),t&&(t=W(t,h),t&&(t=W(t,u),t&&(t=W(t,d),t&&(t=W(t,p),t&&(t=W(t,x),t)))))))for(let e=0;e<t.length;e++){const o=t[e];if(R.indices.push(U),g?(o.localPositionOverride?(R.positions[3*U]=o.localPositionOverride[0],R.positions[3*U+1]=o.localPositionOverride[1],R.positions[3*U+2]=o.localPositionOverride[2]):T&&(R.positions[3*U]=T[o.vertexIdx],R.positions[3*U+1]=T[o.vertexIdx+1],R.positions[3*U+2]=T[o.vertexIdx+2]),o.localNormalOverride?(R.normals[3*U]=o.localNormalOverride[0],R.normals[3*U+1]=o.localNormalOverride[1],R.normals[3*U+2]=o.localNormalOverride[2]):P&&(R.normals[3*U]=P[o.vertexIdx],R.normals[3*U+1]=P[o.vertexIdx+1],R.normals[3*U+2]=P[o.vertexIdx+2])):(o.position.toArray(R.positions,3*U),o.normal.toArray(R.normals,3*U)),R.matricesIndices&&R.matricesWeights&&(o.matrixIndicesOverride?(R.matricesIndices[4*U]=o.matrixIndicesOverride[0],R.matricesIndices[4*U+1]=o.matrixIndicesOverride[1],R.matricesIndices[4*U+2]=o.matrixIndicesOverride[2],R.matricesIndices[4*U+3]=o.matrixIndicesOverride[3]):(I&&(R.matricesIndices[4*U]=I[o.vertexIdxForBones],R.matricesIndices[4*U+1]=I[o.vertexIdxForBones+1],R.matricesIndices[4*U+2]=I[o.vertexIdxForBones+2],R.matricesIndices[4*U+3]=I[o.vertexIdxForBones+3]),F&&R.matricesIndicesExtra&&(R.matricesIndicesExtra[4*U]=F[o.vertexIdxForBones],R.matricesIndicesExtra[4*U+1]=F[o.vertexIdxForBones+1],R.matricesIndicesExtra[4*U+2]=F[o.vertexIdxForBones+2],R.matricesIndicesExtra[4*U+3]=F[o.vertexIdxForBones+3])),o.matrixWeightsOverride?(R.matricesWeights[4*U]=o.matrixWeightsOverride[0],R.matricesWeights[4*U+1]=o.matrixWeightsOverride[1],R.matricesWeights[4*U+2]=o.matrixWeightsOverride[2],R.matricesWeights[4*U+3]=o.matrixWeightsOverride[3]):(b&&(R.matricesWeights[4*U]=b[o.vertexIdxForBones],R.matricesWeights[4*U+1]=b[o.vertexIdxForBones+1],R.matricesWeights[4*U+2]=b[o.vertexIdxForBones+2],R.matricesWeights[4*U+3]=b[o.vertexIdxForBones+3]),w&&R.matricesWeightsExtra&&(R.matricesWeightsExtra[4*U]=w[o.vertexIdxForBones],R.matricesWeightsExtra[4*U+1]=w[o.vertexIdxForBones+1],R.matricesWeightsExtra[4*U+2]=w[o.vertexIdxForBones+2],R.matricesWeightsExtra[4*U+3]=w[o.vertexIdxForBones+3]))),s.captureUVS)o.uv.toArray(R.uvs,2*U);else{R.uvs.push(.5+o.position.x/K.x);const e=.5+o.position.y/K.y;R.uvs.push(l.e.UseOpenGLOrientationForUV?1-e:e)}U++}}const Y=new r.Kj(e,t.getScene());return R.applyToMesh(Y),g?(Y.skeleton=t.skeleton,Y.parent=t):(Y.position=D.clone(),Y.rotation=new o.P(j,L,C)),Y.computeWorldMatrix(!0),Y.refreshBoundingInfo(!0,!0),Y}const g={CreateDecal:O};r.Kj.CreateDecal=(e,t,s,o,a,r)=>O(e,t,{position:s,normal:o,size:a,angle:r})},8128:(e,t,s)=>{s.d(t,{tX:()=>l,uH:()=>i,vM:()=>n});var o=s(3632),a=s(4517),r=s(3027);function n(e){const t=new Array,s=new Array,o=new Array,n=new Array,i=e.radius||.5,l=e.tessellation||64,c=e.arc&&(e.arc<=0||e.arc>1)?1:e.arc||1,h=0===e.sideOrientation?0:e.sideOrientation||a.x.DEFAULTSIDE;t.push(0,0,0),n.push(.5,.5);const u=2*Math.PI*c,d=1===c?u/l:u/(l-1);let p=0;for(let e=0;e<l;e++){const e=Math.cos(p),s=Math.sin(p),o=(e+1)/2,a=(1-s)/2;t.push(i*e,i*s,0),n.push(o,r.e.UseOpenGLOrientationForUV?1-a:a),p+=d}1===c&&(t.push(t[3],t[4],t[5]),n.push(n[2],r.e.UseOpenGLOrientationForUV?1-n[3]:n[3]));const x=t.length/3;for(let e=1;e<x-1;e++)s.push(e+1,0,e);a.x.ComputeNormals(t,s,o),a.x._ComputeSides(h,t,s,o,n,e.frontUVs,e.backUVs);const f=new a.x;return f.indices=s,f.positions=t,f.normals=o,f.uvs=n,f}function i(e,t={},s=null){const a=new o.Kj(e,s);return t.sideOrientation=o.Kj._GetDefaultSideOrientation(t.sideOrientation),a._originalBuilderSideOrientation=t.sideOrientation,n(t).applyToMesh(a,t.updatable),a}const l={CreateDisc:i};a.x.CreateDisc=n,o.Kj.CreateDisc=(e,t,s,o=null,a,r)=>i(e,{radius:t,tessellation:s,sideOrientation:r,updatable:a},o)},9609:(e,t,s)=>{s.d(t,{M:()=>n});var o=s(2758),a=s(9288),r=s(1755);function n(e,t,s=null){let n=t.m||1;n!==Math.floor(n)&&(Math.floor(n),a.Y.Warn("m not an integer only floor(m) used"));let i=t.n||0;if(i!==Math.floor(i)&&(Math.floor(i),a.Y.Warn("n not an integer only floor(n) used")),i>n){const e=i;i=n,n=e,a.Y.Warn("n > m therefore m and n swapped")}const l=new r.Bn;l.build(n,i);const c={custom:r.zz.BuildGeodesicData(l),size:t.size,sizeX:t.sizeX,sizeY:t.sizeY,sizeZ:t.sizeZ,faceUV:t.faceUV,faceColors:t.faceColors,flat:t.flat,updatable:t.updatable,sideOrientation:t.sideOrientation,frontUVs:t.frontUVs,backUVs:t.backUVs};return(0,o.sh)(e,c,s)}},3546:(e,t,s)=>{s.d(t,{_:()=>d,w:()=>u});var o=s(972),a=s(9859),r=s(3632),n=s(4517),i=s(9288),l=s(1755),c=s(9044),h=s(3027);function u(e,t){const s=e.size,a=e.sizeX||s||1,r=e.sizeY||s||1,i=e.sizeZ||s||1,l=0===e.sideOrientation?0:e.sideOrientation||n.x.DEFAULTSIDE,c=new Array,u=new Array,d=new Array,p=new Array;let x=1/0,f=-1/0,O=1/0,g=-1/0;for(let e=0;e<t.vertex.length;e++)x=Math.min(x,t.vertex[e][0]*a),f=Math.max(f,t.vertex[e][0]*a),O=Math.min(O,t.vertex[e][1]*r),g=Math.max(g,t.vertex[e][1]*r);let m=0;for(let e=0;e<t.face.length;e++){const s=t.face[e],n=o.P.FromArray(t.vertex[s[0]]),l=o.P.FromArray(t.vertex[s[2]]),y=o.P.FromArray(t.vertex[s[1]]),A=l.subtract(n),v=y.subtract(n),T=o.P.Cross(v,A).normalize();for(let e=0;e<s.length;e++){d.push(T.x,T.y,T.z);const o=t.vertex[s[e]];c.push(o[0]*a,o[1]*r,o[2]*i);const n=(o[1]*r-O)/(g-O);p.push((o[0]*a-x)/(f-x),h.e.UseOpenGLOrientationForUV?1-n:n)}for(let e=0;e<s.length-2;e++)u.push(m,m+e+2,m+e+1);m+=s.length}n.x._ComputeSides(l,c,u,d,p);const y=new n.x;return y.positions=c,y.indices=u,y.normals=d,y.uvs=p,y}function d(e,t,s=null){const n=t.size,h=t.sizeX||n||1,d=t.sizeY||n||1,p=t.sizeZ||n||1;let x=t.m||1;x!==Math.floor(x)&&(Math.floor(x),i.Y.Warn("m not an integer only floor(m) used"));let f=t.n||0;if(f!==Math.floor(f)&&(Math.floor(f),i.Y.Warn("n not an integer only floor(n) used")),f>x){const e=f;f=x,x=e,i.Y.Warn("n > m therefore m and n swapped")}const O=new l.Bn;O.build(x,f);const g=l.zz.BuildGeodesicData(O),m=g.toGoldbergPolyhedronData(),y=new c.R(e,s);t.sideOrientation=r.Kj._GetDefaultSideOrientation(t.sideOrientation),y._originalBuilderSideOrientation=t.sideOrientation,u(t,m).applyToMesh(y,t.updatable),y.goldbergData.nbSharedFaces=g.sharedNodes,y.goldbergData.nbUnsharedFaces=g.poleNodes,y.goldbergData.adjacentFaces=g.adjacentFaces,y.goldbergData.nbFaces=y.goldbergData.nbSharedFaces+y.goldbergData.nbUnsharedFaces,y.goldbergData.nbFacesAtPole=(y.goldbergData.nbUnsharedFaces-12)/12;for(let e=0;e<g.vertex.length;e++)y.goldbergData.faceCenters.push(o.P.FromArray(g.vertex[e])),y.goldbergData.faceCenters[e].x*=h,y.goldbergData.faceCenters[e].y*=d,y.goldbergData.faceCenters[e].z*=p,y.goldbergData.faceColors.push(new a.HE(1,1,1,1));for(let e=0;e<m.face.length;e++){const t=m.face[e],s=o.P.FromArray(m.vertex[t[0]]),a=o.P.FromArray(m.vertex[t[2]]),r=o.P.FromArray(m.vertex[t[1]]),n=a.subtract(s),i=r.subtract(s),l=o.P.Cross(i,n).normalize(),c=o.P.Cross(i,l).normalize();y.goldbergData.faceXaxis.push(i.normalize()),y.goldbergData.faceYaxis.push(l),y.goldbergData.faceZaxis.push(c)}return y}r.Kj.CreateGoldberg=d},6377:(e,t,s)=>{s.d(t,{Au:()=>l,GM:()=>c,GQ:()=>i});var o=s(972),a=s(3632),r=s(4517),n=s(3027);function i(e){const t=e.sideOrientation||r.x.DEFAULTSIDE,s=e.radius||1,a=void 0===e.flat||e.flat,i=e.subdivisions||4,l=e.radiusX||s,c=e.radiusY||s,h=e.radiusZ||s,u=(1+Math.sqrt(5))/2,d=[-1,u,-0,1,u,0,-1,-u,0,1,-u,0,0,-1,-u,0,1,-u,0,-1,u,0,1,u,u,0,1,u,0,-1,-u,0,1,-u,0,-1],p=[0,11,5,0,5,1,0,1,7,0,7,10,12,22,23,1,5,20,5,11,4,23,22,13,22,18,6,7,1,8,14,21,4,14,4,2,16,13,6,15,6,19,3,8,9,4,21,5,13,17,23,6,13,22,19,6,18,9,8,1],x=[0,1,2,3,4,5,6,7,8,9,10,11,0,2,3,3,3,4,7,8,9,9,10,11],f=[5,1,3,1,6,4,0,0,5,3,4,2,2,2,4,0,2,0,1,1,6,0,6,2,0,4,3,3,4,4,3,1,4,2,4,4,0,2,1,1,2,2,3,3,1,3,2,4],O=[0,0,0,0,1,0,0,1,1,0,0,0,1,1,0,0,1,1,1,0],g=new Array,m=new Array,y=new Array,A=new Array;let v=0;const T=new Array(3),P=new Array(3);let _;for(_=0;_<3;_++)T[_]=o.P.Zero(),P[_]=o.FM.Zero();for(let e=0;e<20;e++){for(_=0;_<3;_++){const t=p[3*e+_];T[_].copyFromFloats(d[3*x[t]],d[3*x[t]+1],d[3*x[t]+2]),T[_].normalize(),P[_].copyFromFloats(.134765625*f[2*t]+.05859375+-.0390625*O[e],.2333984375*f[2*t+1]+.025390625+.01953125*O[e])}const t=(e,t,s,r)=>{const u=o.P.Lerp(T[0],T[2],t/i),d=o.P.Lerp(T[1],T[2],t/i),p=i===t?T[2]:o.P.Lerp(u,d,e/(i-t));let x;if(p.normalize(),a){const e=o.P.Lerp(T[0],T[2],r/i),t=o.P.Lerp(T[1],T[2],r/i);x=o.P.Lerp(e,t,s/(i-r))}else x=new o.P(p.x,p.y,p.z);x.x/=l,x.y/=c,x.z/=h,x.normalize();const f=o.FM.Lerp(P[0],P[2],t/i),O=o.FM.Lerp(P[1],P[2],t/i),_=i===t?P[2]:o.FM.Lerp(f,O,e/(i-t));m.push(p.x*l,p.y*c,p.z*h),y.push(x.x,x.y,x.z),A.push(_.x,n.e.UseOpenGLOrientationForUV?1-_.y:_.y),g.push(v),v++};for(let e=0;e<i;e++)for(let s=0;s+e<i;s++)t(s,e,s+1/3,e+1/3),t(s+1,e,s+1/3,e+1/3),t(s,e+1,s+1/3,e+1/3),s+e+1<i&&(t(s+1,e,s+2/3,e+2/3),t(s+1,e+1,s+2/3,e+2/3),t(s,e+1,s+2/3,e+2/3))}r.x._ComputeSides(t,m,g,y,A,e.frontUVs,e.backUVs);const I=new r.x;return I.indices=g,I.positions=m,I.normals=y,I.uvs=A,I}function l(e,t={},s=null){const o=new a.Kj(e,s);return t.sideOrientation=a.Kj._GetDefaultSideOrientation(t.sideOrientation),o._originalBuilderSideOrientation=t.sideOrientation,i(t).applyToMesh(o,t.updatable),o}const c={CreateIcoSphere:l};r.x.CreateIcoSphere=i,a.Kj.CreateIcoSphere=(e,t,s)=>l(e,t,s)},6755:(e,t,s)=>{s.d(t,{O:()=>n,a:()=>i});var o=s(972),a=s(3632),r=s(7079);function n(e,t,s=null){const n=t.arc?t.arc<=0||t.arc>1?1:t.arc:1,i=void 0===t.closed||t.closed,l=t.shape,c=t.radius||1,h=t.tessellation||64,u=t.clip||0,d=t.updatable,p=a.Kj._GetDefaultSideOrientation(t.sideOrientation),x=t.cap||a.Kj.NO_CAP,f=2*Math.PI,O=new Array,g=t.invertUV||!1;let m=0,y=0;const A=f/h*n;let v,T;for(m=0;m<=h-u;m++){for(T=[],x!=a.Kj.CAP_START&&x!=a.Kj.CAP_ALL||(T.push(new o.P(0,l[0].y,0)),T.push(new o.P(Math.cos(m*A)*l[0].x*c,l[0].y,Math.sin(m*A)*l[0].x*c))),y=0;y<l.length;y++)v=new o.P(Math.cos(m*A)*l[y].x*c,l[y].y,Math.sin(m*A)*l[y].x*c),T.push(v);x!=a.Kj.CAP_END&&x!=a.Kj.CAP_ALL||(T.push(new o.P(Math.cos(m*A)*l[l.length-1].x*c,l[l.length-1].y,Math.sin(m*A)*l[l.length-1].x*c)),T.push(new o.P(0,l[l.length-1].y,0))),O.push(T)}return(0,r.LY)(e,{pathArray:O,closeArray:i,sideOrientation:p,updatable:d,invertUV:g,frontUVs:t.frontUVs,backUVs:t.backUVs},s)}const i={CreateLathe:n};a.Kj.CreateLathe=(e,t,s,o,a,r,i)=>n(e,{shape:t,radius:s,tessellation:o,sideOrientation:i,updatable:r},a)},7700:(e,t,s)=>{s.d(t,{Pk:()=>x,Yo:()=>p,a4:()=>d,gl:()=>u});var o=s(972),a=s(9859),r=s(3632),n=s(4517),i=s(540),l=s(7959),c=s(78),h=s(3027);function u(e,t,s,r,i,c,u){const d=s||new Array(3),p=r,x=[],f=u||!1;for(let e=0;e<3;e++)void 0===d[e]&&(d[e]=new o.Lt(0,0,1,1)),p&&void 0===p[e]&&(p[e]=new a.HE(1,1,1,1));const O=e.getVerticesData(l.o.PositionKind),g=e.getVerticesData(l.o.NormalKind),m=e.getVerticesData(l.o.UVKind),y=e.getIndices(),A=O.length/9;let v=0,T=0,P=0,_=0,I=0;const b=[0];if(f)for(let e=A;e<O.length/3;e+=4)T=O[3*(e+2)]-O[3*e],P=O[3*(e+2)+2]-O[3*e+2],_=Math.sqrt(T*T+P*P),I+=_,b.push(I);let F=0,w=0;for(let e=0;e<g.length;e+=3)Math.abs(g[e+1])<.001&&(w=1),Math.abs(g[e+1]-1)<.001&&(w=0),Math.abs(g[e+1]+1)<.001&&(w=2),F=e/3,1===w?(v=F-A,m[2*F]=v%4<1.5?f?d[w].x+(d[w].z-d[w].x)*b[Math.floor(v/4)]/I:d[w].x:f?d[w].x+(d[w].z-d[w].x)*b[Math.floor(v/4)+1]/I:d[w].z,m[2*F+1]=v%2==0?h.e.UseOpenGLOrientationForUV?1-d[w].w:d[w].w:h.e.UseOpenGLOrientationForUV?1-d[w].y:d[w].y):(m[2*F]=(1-m[2*F])*d[w].x+m[2*F]*d[w].z,m[2*F+1]=(1-m[2*F+1])*d[w].y+m[2*F+1]*d[w].w,h.e.UseOpenGLOrientationForUV&&(m[2*F+1]=1-m[2*F+1])),p&&x.push(p[w].r,p[w].g,p[w].b,p[w].a);n.x._ComputeSides(t,O,y,g,m,i,c);const D=new n.x;if(D.indices=y,D.positions=O,D.normals=g,D.uvs=m,p){const e=t===n.x.DOUBLESIDE?x.concat(x):x;D.colors=e}return D}function d(e,t,s=null,a=earcut){t.sideOrientation=r.Kj._GetDefaultSideOrientation(t.sideOrientation);const n=t.shape,l=t.holes||[],h=t.depth||0,d=t.smoothingThreshold||2,p=[];let x=[];for(let e=0;e<n.length;e++)p[e]=new o.FM(n[e].x,n[e].z);p[0].equalsWithEpsilon(p[p.length-1],1e-8)&&p.pop();const f=new i.z(e,p,s||c.l.LastCreatedScene,a);for(let e=0;e<l.length;e++){x=[];for(let t=0;t<l[e].length;t++)x.push(new o.FM(l[e][t].x,l[e][t].z));f.addHole(x)}const O=f.build(!1,h,d);return O._originalBuilderSideOrientation=t.sideOrientation,u(O,t.sideOrientation,t.faceUV,t.faceColors,t.frontUVs,t.backUVs,t.wrap).applyToMesh(O,t.updatable),O}function p(e,t,s=null,o=earcut){return d(e,t,s,o)}const x={ExtrudePolygon:p,CreatePolygon:d};n.x.CreatePolygon=u,r.Kj.CreatePolygon=(e,t,s,o,a,r,n=earcut)=>d(e,{shape:t,holes:o,updatable:a,sideOrientation:r},s,n),r.Kj.ExtrudePolygon=(e,t,s,o,a,r,n,i=earcut)=>p(e,{shape:t,holes:a,depth:s,updatable:r,sideOrientation:n},o,i)},2758:(e,t,s)=>{s.d(t,{Qy:()=>l,ox:()=>h,sh:()=>c});var o=s(972),a=s(9859),r=s(3632),n=s(4517),i=s(3027);function l(e){const t=[];t[0]={vertex:[[0,0,1.732051],[1.632993,0,-.5773503],[-.8164966,1.414214,-.5773503],[-.8164966,-1.414214,-.5773503]],face:[[0,1,2],[0,2,3],[0,3,1],[1,3,2]]},t[1]={vertex:[[0,0,1.414214],[1.414214,0,0],[0,1.414214,0],[-1.414214,0,0],[0,-1.414214,0],[0,0,-1.414214]],face:[[0,1,2],[0,2,3],[0,3,4],[0,4,1],[1,4,5],[1,5,2],[2,5,3],[3,5,4]]},t[2]={vertex:[[0,0,1.070466],[.7136442,0,.7978784],[-.3568221,.618034,.7978784],[-.3568221,-.618034,.7978784],[.7978784,.618034,.3568221],[.7978784,-.618034,.3568221],[-.9341724,.381966,.3568221],[.1362939,1,.3568221],[.1362939,-1,.3568221],[-.9341724,-.381966,.3568221],[.9341724,.381966,-.3568221],[.9341724,-.381966,-.3568221],[-.7978784,.618034,-.3568221],[-.1362939,1,-.3568221],[-.1362939,-1,-.3568221],[-.7978784,-.618034,-.3568221],[.3568221,.618034,-.7978784],[.3568221,-.618034,-.7978784],[-.7136442,0,-.7978784],[0,0,-1.070466]],face:[[0,1,4,7,2],[0,2,6,9,3],[0,3,8,5,1],[1,5,11,10,4],[2,7,13,12,6],[3,9,15,14,8],[4,10,16,13,7],[5,8,14,17,11],[6,12,18,15,9],[10,11,17,19,16],[12,13,16,19,18],[14,15,18,19,17]]},t[3]={vertex:[[0,0,1.175571],[1.051462,0,.5257311],[.3249197,1,.5257311],[-.8506508,.618034,.5257311],[-.8506508,-.618034,.5257311],[.3249197,-1,.5257311],[.8506508,.618034,-.5257311],[.8506508,-.618034,-.5257311],[-.3249197,1,-.5257311],[-1.051462,0,-.5257311],[-.3249197,-1,-.5257311],[0,0,-1.175571]],face:[[0,1,2],[0,2,3],[0,3,4],[0,4,5],[0,5,1],[1,5,7],[1,7,6],[1,6,2],[2,6,8],[2,8,3],[3,8,9],[3,9,4],[4,9,10],[4,10,5],[5,10,7],[6,7,11],[6,11,8],[7,10,11],[8,11,9],[9,11,10]]},t[4]={vertex:[[0,0,1.070722],[.7148135,0,.7971752],[-.104682,.7071068,.7971752],[-.6841528,.2071068,.7971752],[-.104682,-.7071068,.7971752],[.6101315,.7071068,.5236279],[1.04156,.2071068,.1367736],[.6101315,-.7071068,.5236279],[-.3574067,1,.1367736],[-.7888348,-.5,.5236279],[-.9368776,.5,.1367736],[-.3574067,-1,.1367736],[.3574067,1,-.1367736],[.9368776,-.5,-.1367736],[.7888348,.5,-.5236279],[.3574067,-1,-.1367736],[-.6101315,.7071068,-.5236279],[-1.04156,-.2071068,-.1367736],[-.6101315,-.7071068,-.5236279],[.104682,.7071068,-.7971752],[.6841528,-.2071068,-.7971752],[.104682,-.7071068,-.7971752],[-.7148135,0,-.7971752],[0,0,-1.070722]],face:[[0,2,3],[1,6,5],[4,9,11],[7,15,13],[8,16,10],[12,14,19],[17,22,18],[20,21,23],[0,1,5,2],[0,3,9,4],[0,4,7,1],[1,7,13,6],[2,5,12,8],[2,8,10,3],[3,10,17,9],[4,11,15,7],[5,6,14,12],[6,13,20,14],[8,12,19,16],[9,17,18,11],[10,16,22,17],[11,18,21,15],[13,15,21,20],[14,20,23,19],[16,19,23,22],[18,22,23,21]]},t[5]={vertex:[[0,0,1.322876],[1.309307,0,.1889822],[-.9819805,.8660254,.1889822],[.1636634,-1.299038,.1889822],[.3273268,.8660254,-.9449112],[-.8183171,-.4330127,-.9449112]],face:[[0,3,1],[2,4,5],[0,1,4,2],[0,2,5,3],[1,3,5,4]]},t[6]={vertex:[[0,0,1.159953],[1.013464,0,.5642542],[-.3501431,.9510565,.5642542],[-.7715208,-.6571639,.5642542],[.6633206,.9510565,-.03144481],[.8682979,-.6571639,-.3996071],[-1.121664,.2938926,-.03144481],[-.2348831,-1.063314,-.3996071],[.5181548,.2938926,-.9953061],[-.5850262,-.112257,-.9953061]],face:[[0,1,4,2],[0,2,6,3],[1,5,8,4],[3,6,9,7],[5,7,9,8],[0,3,7,5,1],[2,4,8,9,6]]},t[7]={vertex:[[0,0,1.118034],[.8944272,0,.6708204],[-.2236068,.8660254,.6708204],[-.7826238,-.4330127,.6708204],[.6708204,.8660254,.2236068],[1.006231,-.4330127,-.2236068],[-1.006231,.4330127,.2236068],[-.6708204,-.8660254,-.2236068],[.7826238,.4330127,-.6708204],[.2236068,-.8660254,-.6708204],[-.8944272,0,-.6708204],[0,0,-1.118034]],face:[[0,1,4,2],[0,2,6,3],[1,5,8,4],[3,6,10,7],[5,9,11,8],[7,10,11,9],[0,3,7,9,5,1],[2,4,8,11,10,6]]},t[8]={vertex:[[-.729665,.670121,.319155],[-.655235,-.29213,-.754096],[-.093922,-.607123,.537818],[.702196,.595691,.485187],[.776626,-.36656,-.588064]],face:[[1,4,2],[0,1,2],[3,0,2],[4,3,2],[4,1,0,3]]},t[9]={vertex:[[-.868849,-.100041,.61257],[-.329458,.976099,.28078],[-.26629,-.013796,-.477654],[-.13392,-1.034115,.229829],[.738834,.707117,-.307018],[.859683,-.535264,-.338508]],face:[[3,0,2],[5,3,2],[4,5,2],[1,4,2],[0,1,2],[0,3,5,4,1]]},t[10]={vertex:[[-.610389,.243975,.531213],[-.187812,-.48795,-.664016],[-.187812,.9759,-.664016],[.187812,-.9759,.664016],[.798201,.243975,.132803]],face:[[1,3,0],[3,4,0],[3,1,4],[0,2,1],[0,4,2],[2,4,1]]},t[11]={vertex:[[-1.028778,.392027,-.048786],[-.640503,-.646161,.621837],[-.125162,-.395663,-.540059],[.004683,.888447,-.651988],[.125161,.395663,.540059],[.632925,-.791376,.433102],[1.031672,.157063,-.354165]],face:[[3,2,0],[2,1,0],[2,5,1],[0,4,3],[0,1,4],[4,1,5],[2,3,6],[3,4,6],[5,2,6],[4,5,6]]},t[12]={vertex:[[-.669867,.334933,-.529576],[-.669867,.334933,.529577],[-.4043,1.212901,0],[-.334933,-.669867,-.529576],[-.334933,-.669867,.529577],[.334933,.669867,-.529576],[.334933,.669867,.529577],[.4043,-1.212901,0],[.669867,-.334933,-.529576],[.669867,-.334933,.529577]],face:[[8,9,7],[6,5,2],[3,8,7],[5,0,2],[4,3,7],[0,1,2],[9,4,7],[1,6,2],[9,8,5,6],[8,3,0,5],[3,4,1,0],[4,9,6,1]]},t[13]={vertex:[[-.931836,.219976,-.264632],[-.636706,.318353,.692816],[-.613483,-.735083,-.264632],[-.326545,.979634,0],[-.318353,-.636706,.692816],[-.159176,.477529,-.856368],[.159176,-.477529,-.856368],[.318353,.636706,.692816],[.326545,-.979634,0],[.613482,.735082,-.264632],[.636706,-.318353,.692816],[.931835,-.219977,-.264632]],face:[[11,10,8],[7,9,3],[6,11,8],[9,5,3],[2,6,8],[5,0,3],[4,2,8],[0,1,3],[10,4,8],[1,7,3],[10,11,9,7],[11,6,5,9],[6,2,0,5],[2,4,1,0],[4,10,7,1]]},t[14]={vertex:[[-.93465,.300459,-.271185],[-.838689,-.260219,-.516017],[-.711319,.717591,.128359],[-.710334,-.156922,.080946],[-.599799,.556003,-.725148],[-.503838,-.004675,-.969981],[-.487004,.26021,.48049],[-.460089,-.750282,-.512622],[-.376468,.973135,-.325605],[-.331735,-.646985,.084342],[-.254001,.831847,.530001],[-.125239,-.494738,-.966586],[.029622,.027949,.730817],[.056536,-.982543,-.262295],[.08085,1.087391,.076037],[.125583,-.532729,.485984],[.262625,.599586,.780328],[.391387,-.726999,-.716259],[.513854,-.868287,.139347],[.597475,.85513,.326364],[.641224,.109523,.783723],[.737185,-.451155,.538891],[.848705,-.612742,-.314616],[.976075,.365067,.32976],[1.072036,-.19561,.084927]],face:[[15,18,21],[12,20,16],[6,10,2],[3,0,1],[9,7,13],[2,8,4,0],[0,4,5,1],[1,5,11,7],[7,11,17,13],[13,17,22,18],[18,22,24,21],[21,24,23,20],[20,23,19,16],[16,19,14,10],[10,14,8,2],[15,9,13,18],[12,15,21,20],[6,12,16,10],[3,6,2,0],[9,3,1,7],[9,15,12,6,3],[22,17,11,5,4,8,14,19,23,24]]};const s=e.type&&(e.type<0||e.type>=t.length)?0:e.type||0,r=e.size,l=e.sizeX||r||1,c=e.sizeY||r||1,h=e.sizeZ||r||1,u=e.custom||t[s],d=u.face.length,p=e.faceUV||new Array(d),x=e.faceColors,f=void 0===e.flat||e.flat,O=0===e.sideOrientation?0:e.sideOrientation||n.x.DEFAULTSIDE,g=new Array,m=new Array,y=new Array,A=new Array,v=new Array;let T=0,P=0;const _=new Array;let I,b,F,w,D,M,K=0,C=0;if(f)for(C=0;C<d;C++)x&&void 0===x[C]&&(x[C]=new a.HE(1,1,1,1)),p&&void 0===p[C]&&(p[C]=new o.Lt(0,0,1,1));if(f)for(C=0;C<d;C++){const e=u.face[C].length;for(F=2*Math.PI/e,w=.5*Math.tan(F/2),D=.5,K=0;K<e;K++)g.push(u.vertex[u.face[C][K]][0]*l,u.vertex[u.face[C][K]][1]*c,u.vertex[u.face[C][K]][2]*h),_.push(T),T++,I=p[C].x+(p[C].z-p[C].x)*(.5+w),b=p[C].y+(p[C].w-p[C].y)*(D-.5),A.push(I,i.e.UseOpenGLOrientationForUV?1-b:b),M=w*Math.cos(F)-D*Math.sin(F),D=w*Math.sin(F)+D*Math.cos(F),w=M,x&&v.push(x[C].r,x[C].g,x[C].b,x[C].a);for(K=0;K<e-2;K++)m.push(_[0+P],_[K+2+P],_[K+1+P]);P+=e}else{for(K=0;K<u.vertex.length;K++)g.push(u.vertex[K][0]*l,u.vertex[K][1]*c,u.vertex[K][2]*h),A.push(0,i.e.UseOpenGLOrientationForUV?1:0);for(C=0;C<d;C++)for(K=0;K<u.face[C].length-2;K++)m.push(u.face[C][0],u.face[C][K+2],u.face[C][K+1])}n.x.ComputeNormals(g,m,y),n.x._ComputeSides(O,g,m,y,A,e.frontUVs,e.backUVs);const L=new n.x;return L.positions=g,L.indices=m,L.normals=y,L.uvs=A,x&&f&&(L.colors=v),L}function c(e,t={},s=null){const o=new r.Kj(e,s);return t.sideOrientation=r.Kj._GetDefaultSideOrientation(t.sideOrientation),o._originalBuilderSideOrientation=t.sideOrientation,l(t).applyToMesh(o,t.updatable),o}const h={CreatePolyhedron:c};n.x.CreatePolyhedron=l,r.Kj.CreatePolyhedron=(e,t,s)=>c(e,t,s)},6435:(e,t,s)=>{s.d(t,{Sc:()=>u,cQ:()=>h,qS:()=>c});var o=s(972),a=s(9859),r=s(3632),n=s(4517),i=s(1694),l=s(3027);function c(e){const t=e.faceUV||new Array(6),s=e.faceColors,c=e.pattern||r.Kj.NO_FLIP,h=e.width||e.size||1,u=e.height||e.size||1,d=e.depth||e.size||1,p=e.tileWidth||e.tileSize||1,x=e.tileHeight||e.tileSize||1,f=e.alignHorizontal||0,O=e.alignVertical||0,g=0===e.sideOrientation?0:e.sideOrientation||n.x.DEFAULTSIDE;for(let e=0;e<6;e++)void 0===t[e]&&(t[e]=new o.Lt(0,0,1,1)),s&&void 0===s[e]&&(s[e]=new a.HE(1,1,1,1));const m=h/2,y=u/2,A=d/2,v=[];for(let e=0;e<2;e++)v[e]=(0,i.mm)({pattern:c,tileWidth:p,tileHeight:x,width:h,height:u,alignVertical:O,alignHorizontal:f,sideOrientation:g});for(let e=2;e<4;e++)v[e]=(0,i.mm)({pattern:c,tileWidth:p,tileHeight:x,width:d,height:u,alignVertical:O,alignHorizontal:f,sideOrientation:g});let T=O;O===r.Kj.BOTTOM?T=r.Kj.TOP:O===r.Kj.TOP&&(T=r.Kj.BOTTOM);for(let e=4;e<6;e++)v[e]=(0,i.mm)({pattern:c,tileWidth:p,tileHeight:x,width:h,height:d,alignVertical:T,alignHorizontal:f,sideOrientation:g});let P=[],_=[],I=[],b=[];const F=[],w=[],D=[],M=[];let K=0,C=0;for(let e=0;e<6;e++){const a=v[e].positions.length;w[e]=[],D[e]=[];for(let t=0;t<a/3;t++)w[e].push(new o.P(v[e].positions[3*t],v[e].positions[3*t+1],v[e].positions[3*t+2])),D[e].push(new o.P(v[e].normals[3*t],v[e].normals[3*t+1],v[e].normals[3*t+2]));K=v[e].uvs.length,M[e]=[];for(let s=0;s<K;s+=2)M[e][s]=t[e].x+(t[e].z-t[e].x)*v[e].uvs[s],M[e][s+1]=t[e].y+(t[e].w-t[e].y)*v[e].uvs[s+1],l.e.UseOpenGLOrientationForUV&&(M[e][s+1]=1-M[e][s+1]);if(I=I.concat(M[e]),b=b.concat(v[e].indices.map((e=>e+C))),C+=w[e].length,s)for(let t=0;t<4;t++)F.push(s[e].r,s[e].g,s[e].b,s[e].a)}const L=new o.P(0,0,A),E=o.y3.RotationY(Math.PI);P=w[0].map((e=>o.P.TransformNormal(e,E).add(L))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]),_=D[0].map((e=>o.P.TransformNormal(e,E))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]),P=P.concat(w[1].map((e=>e.subtract(L))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),_=_.concat(D[1].map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]));const j=new o.P(m,0,0),B=o.y3.RotationY(-Math.PI/2);P=P.concat(w[2].map((e=>o.P.TransformNormal(e,B).add(j))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),_=_.concat(D[2].map((e=>o.P.TransformNormal(e,B))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]));const z=o.y3.RotationY(Math.PI/2);P=P.concat(w[3].map((e=>o.P.TransformNormal(e,z).subtract(j))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),_=_.concat(D[3].map((e=>o.P.TransformNormal(e,z))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]));const V=new o.P(0,y,0),R=o.y3.RotationX(Math.PI/2);P=P.concat(w[4].map((e=>o.P.TransformNormal(e,R).add(V))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),_=_.concat(D[4].map((e=>o.P.TransformNormal(e,R))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[]));const U=o.y3.RotationX(-Math.PI/2);P=P.concat(w[5].map((e=>o.P.TransformNormal(e,U).subtract(V))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),_=_.concat(D[5].map((e=>o.P.TransformNormal(e,U))).map((e=>[e.x,e.y,e.z])).reduce(((e,t)=>e.concat(t)),[])),n.x._ComputeSides(g,P,b,_,I);const S=new n.x;if(S.indices=b,S.positions=P,S.normals=_,S.uvs=I,s){const e=g===n.x.DOUBLESIDE?F.concat(F):F;S.colors=e}return S}function h(e,t,s=null){const o=new r.Kj(e,s);return t.sideOrientation=r.Kj._GetDefaultSideOrientation(t.sideOrientation),o._originalBuilderSideOrientation=t.sideOrientation,c(t).applyToMesh(o,t.updatable),o}const u={CreateTiledBox:h};n.x.CreateTiledBox=c},1694:(e,t,s)=>{s.d(t,{KA:()=>n,P8:()=>i,mm:()=>r});var o=s(3632),a=s(4517);function r(e){const t=e.pattern||o.Kj.NO_FLIP,s=e.tileWidth||e.tileSize||1,r=e.tileHeight||e.tileSize||1,n=e.alignHorizontal||0,i=e.alignVertical||0,l=e.width||e.size||1,c=Math.floor(l/s);let h=l-c*s;const u=e.height||e.size||1,d=Math.floor(u/r);let p=u-d*r;const x=s*c/2,f=r*d/2;let O=0,g=0,m=0,y=0,A=0,v=0;if(h>0||p>0){switch(m=-x,y=-f,A=x,v=f,n){case o.Kj.CENTER:h/=2,m-=h,A+=h;break;case o.Kj.LEFT:A+=h,O=-h/2;break;case o.Kj.RIGHT:m-=h,O=h/2}switch(i){case o.Kj.CENTER:p/=2,y-=p,v+=p;break;case o.Kj.BOTTOM:v+=p,g=-p/2;break;case o.Kj.TOP:y-=p,g=p/2}}const T=[],P=[],_=[];_[0]=[0,0,1,0,1,1,0,1],_[1]=[0,0,1,0,1,1,0,1],t!==o.Kj.ROTATE_TILE&&t!==o.Kj.ROTATE_ROW||(_[1]=[1,1,0,1,0,0,1,0]),t!==o.Kj.FLIP_TILE&&t!==o.Kj.FLIP_ROW||(_[1]=[1,0,0,0,0,1,1,1]),t!==o.Kj.FLIP_N_ROTATE_TILE&&t!==o.Kj.FLIP_N_ROTATE_ROW||(_[1]=[0,1,1,1,1,0,0,0]);let I=[];const b=[],F=[];let w=0;for(let e=0;e<d;e++)for(let a=0;a<c;a++)T.push(a*s-x+O,e*r-f+g,0),T.push((a+1)*s-x+O,e*r-f+g,0),T.push((a+1)*s-x+O,(e+1)*r-f+g,0),T.push(a*s-x+O,(e+1)*r-f+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),I=t===o.Kj.FLIP_TILE||t===o.Kj.ROTATE_TILE||t===o.Kj.FLIP_N_ROTATE_TILE?I.concat(_[(a%2+e%2)%2]):t===o.Kj.FLIP_ROW||t===o.Kj.ROTATE_ROW||t===o.Kj.FLIP_N_ROTATE_ROW?I.concat(_[e%2]):I.concat(_[0]),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1),w+=4;if(h>0||p>0){const e=p>0&&(i===o.Kj.CENTER||i===o.Kj.TOP),a=p>0&&(i===o.Kj.CENTER||i===o.Kj.BOTTOM),l=h>0&&(n===o.Kj.CENTER||n===o.Kj.RIGHT),u=h>0&&(n===o.Kj.CENTER||n===o.Kj.LEFT);let _,D,M,K,C=[];if(e&&l&&(T.push(m+O,y+g,0),T.push(-x+O,y+g,0),T.push(-x+O,y+p+g,0),T.push(m+O,y+p+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),w+=4,_=1-h/s,D=1-p/r,M=1,K=1,C=[_,D,M,D,M,K,_,K],t===o.Kj.ROTATE_ROW&&(C=[1-_,1-D,1-M,1-D,1-M,1-K,1-_,1-K]),t===o.Kj.FLIP_ROW&&(C=[1-_,D,1-M,D,1-M,K,1-_,K]),t===o.Kj.FLIP_N_ROTATE_ROW&&(C=[_,1-D,M,1-D,M,1-K,_,1-K]),I=I.concat(C),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)),e&&u&&(T.push(x+O,y+g,0),T.push(A+O,y+g,0),T.push(A+O,y+p+g,0),T.push(x+O,y+p+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),w+=4,_=0,D=1-p/r,M=h/s,K=1,C=[_,D,M,D,M,K,_,K],(t===o.Kj.ROTATE_ROW||t===o.Kj.ROTATE_TILE&&c%2==0)&&(C=[1-_,1-D,1-M,1-D,1-M,1-K,1-_,1-K]),(t===o.Kj.FLIP_ROW||t===o.Kj.FLIP_TILE&&c%2==0)&&(C=[1-_,D,1-M,D,1-M,K,1-_,K]),(t===o.Kj.FLIP_N_ROTATE_ROW||t===o.Kj.FLIP_N_ROTATE_TILE&&c%2==0)&&(C=[_,1-D,M,1-D,M,1-K,_,1-K]),I=I.concat(C),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)),a&&l&&(T.push(m+O,f+g,0),T.push(-x+O,f+g,0),T.push(-x+O,v+g,0),T.push(m+O,v+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),w+=4,_=1-h/s,D=0,M=1,K=p/r,C=[_,D,M,D,M,K,_,K],(t===o.Kj.ROTATE_ROW&&d%2==1||t===o.Kj.ROTATE_TILE&&d%1==0)&&(C=[1-_,1-D,1-M,1-D,1-M,1-K,1-_,1-K]),(t===o.Kj.FLIP_ROW&&d%2==1||t===o.Kj.FLIP_TILE&&d%2==0)&&(C=[1-_,D,1-M,D,1-M,K,1-_,K]),(t===o.Kj.FLIP_N_ROTATE_ROW&&d%2==1||t===o.Kj.FLIP_N_ROTATE_TILE&&d%2==0)&&(C=[_,1-D,M,1-D,M,1-K,_,1-K]),I=I.concat(C),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)),a&&u&&(T.push(x+O,f+g,0),T.push(A+O,f+g,0),T.push(A+O,v+g,0),T.push(x+O,v+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),w+=4,_=0,D=0,M=h/s,K=p/r,C=[_,D,M,D,M,K,_,K],(t===o.Kj.ROTATE_ROW&&d%2==1||t===o.Kj.ROTATE_TILE&&(d+c)%2==1)&&(C=[1-_,1-D,1-M,1-D,1-M,1-K,1-_,1-K]),(t===o.Kj.FLIP_ROW&&d%2==1||t===o.Kj.FLIP_TILE&&(d+c)%2==1)&&(C=[1-_,D,1-M,D,1-M,K,1-_,K]),(t===o.Kj.FLIP_N_ROTATE_ROW&&d%2==1||t===o.Kj.FLIP_N_ROTATE_TILE&&(d+c)%2==1)&&(C=[_,1-D,M,1-D,M,1-K,_,1-K]),I=I.concat(C),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)),e){const e=[];_=0,D=1-p/r,M=1,K=1,e[0]=[_,D,M,D,M,K,_,K],e[1]=[_,D,M,D,M,K,_,K],t!==o.Kj.ROTATE_TILE&&t!==o.Kj.ROTATE_ROW||(e[1]=[1-_,1-D,1-M,1-D,1-M,1-K,1-_,1-K]),t!==o.Kj.FLIP_TILE&&t!==o.Kj.FLIP_ROW||(e[1]=[1-_,D,1-M,D,1-M,K,1-_,K]),t!==o.Kj.FLIP_N_ROTATE_TILE&&t!==o.Kj.FLIP_N_ROTATE_ROW||(e[1]=[_,1-D,M,1-D,M,1-K,_,1-K]);for(let a=0;a<c;a++)T.push(a*s-x+O,y+g,0),T.push((a+1)*s-x+O,y+g,0),T.push((a+1)*s-x+O,y+p+g,0),T.push(a*s-x+O,y+p+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),w+=4,I=t===o.Kj.FLIP_TILE||t===o.Kj.ROTATE_TILE||t===o.Kj.FLIP_N_ROTATE_TILE?I.concat(e[(a+1)%2]):t===o.Kj.FLIP_ROW||t===o.Kj.ROTATE_ROW||t===o.Kj.FLIP_N_ROTATE_ROW?I.concat(e[1]):I.concat(e[0]),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)}if(a){const e=[];_=0,D=0,M=1,K=p/r,e[0]=[_,D,M,D,M,K,_,K],e[1]=[_,D,M,D,M,K,_,K],t!==o.Kj.ROTATE_TILE&&t!==o.Kj.ROTATE_ROW||(e[1]=[1-_,1-D,1-M,1-D,1-M,1-K,1-_,1-K]),t!==o.Kj.FLIP_TILE&&t!==o.Kj.FLIP_ROW||(e[1]=[1-_,D,1-M,D,1-M,K,1-_,K]),t!==o.Kj.FLIP_N_ROTATE_TILE&&t!==o.Kj.FLIP_N_ROTATE_ROW||(e[1]=[_,1-D,M,1-D,M,1-K,_,1-K]);for(let a=0;a<c;a++)T.push(a*s-x+O,v-p+g,0),T.push((a+1)*s-x+O,v-p+g,0),T.push((a+1)*s-x+O,v+g,0),T.push(a*s-x+O,v+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),w+=4,I=t===o.Kj.FLIP_TILE||t===o.Kj.ROTATE_TILE||t===o.Kj.FLIP_N_ROTATE_TILE?I.concat(e[(a+d)%2]):t===o.Kj.FLIP_ROW||t===o.Kj.ROTATE_ROW||t===o.Kj.FLIP_N_ROTATE_ROW?I.concat(e[d%2]):I.concat(e[0]),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)}if(l){const e=[];_=1-h/s,D=0,M=1,K=1,e[0]=[_,D,M,D,M,K,_,K],e[1]=[_,D,M,D,M,K,_,K],t!==o.Kj.ROTATE_TILE&&t!==o.Kj.ROTATE_ROW||(e[1]=[1-_,1-D,1-M,1-D,1-M,1-K,1-_,1-K]),t!==o.Kj.FLIP_TILE&&t!==o.Kj.FLIP_ROW||(e[1]=[1-_,D,1-M,D,1-M,K,1-_,K]),t!==o.Kj.FLIP_N_ROTATE_TILE&&t!==o.Kj.FLIP_N_ROTATE_ROW||(e[1]=[_,1-D,M,1-D,M,1-K,_,1-K]);for(let s=0;s<d;s++)T.push(m+O,s*r-f+g,0),T.push(m+h+O,s*r-f+g,0),T.push(m+h+O,(s+1)*r-f+g,0),T.push(m+O,(s+1)*r-f+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),w+=4,I=t===o.Kj.FLIP_TILE||t===o.Kj.ROTATE_TILE||t===o.Kj.FLIP_N_ROTATE_TILE?I.concat(e[(s+1)%2]):t===o.Kj.FLIP_ROW||t===o.Kj.ROTATE_ROW||t===o.Kj.FLIP_N_ROTATE_ROW?I.concat(e[s%2]):I.concat(e[0]),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)}if(u){const e=[];_=0,D=0,M=h/r,K=1,e[0]=[_,D,M,D,M,K,_,K],e[1]=[_,D,M,D,M,K,_,K],t!==o.Kj.ROTATE_TILE&&t!==o.Kj.ROTATE_ROW||(e[1]=[1-_,1-D,1-M,1-D,1-M,1-K,1-_,1-K]),t!==o.Kj.FLIP_TILE&&t!==o.Kj.FLIP_ROW||(e[1]=[1-_,D,1-M,D,1-M,K,1-_,K]),t!==o.Kj.FLIP_N_ROTATE_TILE&&t!==o.Kj.FLIP_N_ROTATE_ROW||(e[1]=[_,1-D,M,1-D,M,1-K,_,1-K]);for(let s=0;s<d;s++)T.push(A-h+O,s*r-f+g,0),T.push(A+O,s*r-f+g,0),T.push(A+O,(s+1)*r-f+g,0),T.push(A-h+O,(s+1)*r-f+g,0),F.push(w,w+1,w+3,w+1,w+2,w+3),w+=4,I=t===o.Kj.FLIP_TILE||t===o.Kj.ROTATE_TILE||t===o.Kj.FLIP_N_ROTATE_TILE?I.concat(e[(s+c)%2]):t===o.Kj.FLIP_ROW||t===o.Kj.ROTATE_ROW||t===o.Kj.FLIP_N_ROTATE_ROW?I.concat(e[s%2]):I.concat(e[0]),b.push(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),P.push(0,0,-1,0,0,-1,0,0,-1,0,0,-1)}}const D=0===e.sideOrientation?0:e.sideOrientation||a.x.DEFAULTSIDE;a.x._ComputeSides(D,T,F,P,I,e.frontUVs,e.backUVs);const M=new a.x;M.indices=F,M.positions=T,M.normals=P,M.uvs=I;const K=D===a.x.DOUBLESIDE?b.concat(b):b;return M.colors=K,M}function n(e,t,s=null){const a=new o.Kj(e,s);return t.sideOrientation=o.Kj._GetDefaultSideOrientation(t.sideOrientation),a._originalBuilderSideOrientation=t.sideOrientation,r(t).applyToMesh(a,t.updatable),a}const i={CreateTiledPlane:n};a.x.CreateTiledPlane=r},2005:(e,t,s)=>{s.d(t,{eu:()=>l,h5:()=>i,t3:()=>c});var o=s(972),a=s(3632),r=s(4517),n=s(3027);function i(e){const t=[],s=[],a=[],i=[],l=e.diameter||1,c=e.thickness||.5,h=e.tessellation||16,u=0===e.sideOrientation?0:e.sideOrientation||r.x.DEFAULTSIDE,d=h+1;for(let e=0;e<=h;e++){const r=e/h,u=e*Math.PI*2/h-Math.PI/2,p=o.y3.Translation(l/2,0,0).multiply(o.y3.RotationY(u));for(let l=0;l<=h;l++){const u=1-l/h,x=l*Math.PI*2/h+Math.PI,f=Math.cos(x),O=Math.sin(x);let g=new o.P(f,O,0),m=g.scale(c/2);const y=new o.FM(r,u);m=o.P.TransformCoordinates(m,p),g=o.P.TransformNormal(g,p),s.push(m.x,m.y,m.z),a.push(g.x,g.y,g.z),i.push(y.x,n.e.UseOpenGLOrientationForUV?1-y.y:y.y);const A=(e+1)%d,v=(l+1)%d;t.push(e*d+l),t.push(e*d+v),t.push(A*d+l),t.push(e*d+v),t.push(A*d+v),t.push(A*d+l)}}r.x._ComputeSides(u,s,t,a,i,e.frontUVs,e.backUVs);const p=new r.x;return p.indices=t,p.positions=s,p.normals=a,p.uvs=i,p}function l(e,t={},s){const o=new a.Kj(e,s);return t.sideOrientation=a.Kj._GetDefaultSideOrientation(t.sideOrientation),o._originalBuilderSideOrientation=t.sideOrientation,i(t).applyToMesh(o,t.updatable),o}const c={CreateTorus:l};r.x.CreateTorus=i,a.Kj.CreateTorus=(e,t,s,o,a,r,n)=>l(e,{diameter:t,thickness:s,tessellation:o,sideOrientation:n,updatable:r},a)},9945:(e,t,s)=>{s.d(t,{SN:()=>c,eB:()=>l,i9:()=>i});var o=s(972),a=s(3632),r=s(4517),n=s(3027);function i(e){const t=new Array,s=new Array,a=new Array,i=new Array,l=e.radius||2,c=e.tube||.5,h=e.radialSegments||32,u=e.tubularSegments||32,d=e.p||2,p=e.q||3,x=0===e.sideOrientation?0:e.sideOrientation||r.x.DEFAULTSIDE,f=e=>{const t=Math.cos(e),s=Math.sin(e),a=p/d*e,r=Math.cos(a),n=l*(2+r)*.5*t,i=l*(2+r)*s*.5,c=l*Math.sin(a)*.5;return new o.P(n,i,c)};let O,g;for(O=0;O<=h;O++){const e=O%h/h*2*d*Math.PI,t=f(e),a=f(e+.01),r=a.subtract(t);let l=a.add(t);const p=o.P.Cross(r,l);for(l=o.P.Cross(p,r),p.normalize(),l.normalize(),g=0;g<u;g++){const e=g%u/u*2*Math.PI,o=-c*Math.cos(e),a=c*Math.sin(e);s.push(t.x+o*l.x+a*p.x),s.push(t.y+o*l.y+a*p.y),s.push(t.z+o*l.z+a*p.z),i.push(O/h),i.push(n.e.UseOpenGLOrientationForUV?1-g/u:g/u)}}for(O=0;O<h;O++)for(g=0;g<u;g++){const e=(g+1)%u,s=O*u+g,o=(O+1)*u+g,a=(O+1)*u+e,r=O*u+e;t.push(r),t.push(o),t.push(s),t.push(r),t.push(a),t.push(o)}r.x.ComputeNormals(s,t,a),r.x._ComputeSides(x,s,t,a,i,e.frontUVs,e.backUVs);const m=new r.x;return m.indices=t,m.positions=s,m.normals=a,m.uvs=i,m}function l(e,t={},s){const o=new a.Kj(e,s);return t.sideOrientation=a.Kj._GetDefaultSideOrientation(t.sideOrientation),o._originalBuilderSideOrientation=t.sideOrientation,i(t).applyToMesh(o,t.updatable),o}const c={CreateTorusKnot:l};r.x.CreateTorusKnot=i,a.Kj.CreateTorusKnot=(e,t,s,o,a,r,n,i,c,h)=>l(e,{radius:t,tube:s,radialSegments:o,tubularSegments:a,p:r,q:n,sideOrientation:h,updatable:c},i)},6540:(e,t,s)=>{s.d(t,{F:()=>l,_:()=>i});var o=s(972),a=s(3632),r=s(7079),n=s(1021);function i(e,t,s=null){const i=t.path;let l=t.instance,c=1;void 0!==t.radius?c=t.radius:l&&(c=l._creationDataStorage.radius);const h=t.tessellation||64,u=t.radiusFunction||null;let d=t.cap||a.Kj.NO_CAP;const p=t.invertUV||!1,x=t.updatable,f=a.Kj._GetDefaultSideOrientation(t.sideOrientation);t.arc=t.arc&&(t.arc<=0||t.arc>1)?1:t.arc||1;const O=(e,t,s,r,n,i,l,c)=>{const h=t.getTangents(),u=t.getNormals(),d=t.getDistances(),p=2*Math.PI/n*c,x=i||(()=>r);let f,O,g,m;const y=o.jp.Matrix[0];let A=l===a.Kj.NO_CAP||l===a.Kj.CAP_END?0:2;for(let t=0;t<e.length;t++){O=x(t,d[t]),f=Array(),g=u[t];for(let s=0;s<n;s++)o.y3.RotationAxisToRef(h[t],p*s,y),m=f[s]?f[s]:o.P.Zero(),o.P.TransformCoordinatesToRef(g,y,m),m.scaleInPlace(O).addInPlace(e[t]),f[s]=m;s[A]=f,A++}const v=(t,s)=>{const o=Array();for(let a=0;a<t;a++)o.push(e[s]);return o};switch(l){case a.Kj.NO_CAP:break;case a.Kj.CAP_START:s[0]=v(n,0),s[1]=s[2].slice(0);break;case a.Kj.CAP_END:s[A]=s[A-1].slice(0),s[A+1]=v(n,e.length-1);break;case a.Kj.CAP_ALL:s[0]=v(n,0),s[1]=s[2].slice(0),s[A]=s[A-1].slice(0),s[A+1]=v(n,e.length-1)}return s};let g,m;if(l){const e=l._creationDataStorage,s=t.arc||e.arc;return g=e.path3D.update(i),m=O(i,g,e.pathArray,c,e.tessellation,u,e.cap,s),l=(0,r.LY)("",{pathArray:m,instance:l}),e.path3D=g,e.pathArray=m,e.arc=s,e.radius=c,l}g=new n.$B(i),d=d<0||d>3?0:d,m=O(i,g,new Array,c,h,u,d,t.arc);const y=(0,r.LY)(e,{pathArray:m,closePath:!0,closeArray:!1,updatable:x,sideOrientation:f,invertUV:p,frontUVs:t.frontUVs,backUVs:t.backUVs},s);return y._creationDataStorage.pathArray=m,y._creationDataStorage.path3D=g,y._creationDataStorage.tessellation=h,y._creationDataStorage.cap=d,y._creationDataStorage.arc=t.arc,y._creationDataStorage.radius=c,y}const l={CreateTube:i};a.Kj.CreateTube=(e,t,s,o,a,r,n,l,c,h)=>i(e,{path:t,radius:s,tessellation:o,radiusFunction:a,arc:1,cap:r,updatable:l,sideOrientation:c,instance:h},n)},1755:(e,t,s)=>{s.d(t,{zz:()=>h,lD:()=>c,Bn:()=>l});var o=s(972),a=s(1865),r=s(7786),n=s(9288);class i{constructor(e=0,t=0){this.x=e,this.y=t,e!==Math.floor(e)&&(Math.floor(e),n.Y.Warn("x is not an integer, floor(x) used")),t!==Math.floor(t)&&(Math.floor(t),n.Y.Warn("y is not an integer, floor(y) used"))}clone(){return new i(this.x,this.y)}rotate60About(e){const t=this.x;return this.x=e.x+e.y-this.y,this.y=t+this.y-e.x,this}rotateNeg60About(e){const t=this.x;return this.x=t+this.y-e.y,this.y=e.x+e.y-t,this}rotate120(e,t){e!==Math.floor(e)&&(Math.floor(e),n.Y.Warn("m not an integer only floor(m) used")),t!==Math.floor(t)&&(Math.floor(t),n.Y.Warn("n not an integer only floor(n) used"));const s=this.x;return this.x=e-s-this.y,this.y=t+s,this}rotateNeg120(e,t){e!==Math.floor(e)&&(Math.floor(e),n.Y.Warn("m is not an integer, floor(m) used")),t!==Math.floor(t)&&(Math.floor(t),n.Y.Warn("n is not an integer,   floor(n) used"));const s=this.x;return this.x=this.y-t,this.y=e+t-s-this.y,this}toCartesianOrigin(e,t){const s=o.P.Zero();return s.x=e.x+2*this.x*t+this.y*t,s.y=e.y+Math.sqrt(3)*this.y*t,s}static Zero(){return new i(0,0)}}class l{constructor(){this.cartesian=[],this.vertices=[],this.max=[],this.min=[],this.closestTo=[],this.innerFacets=[],this.isoVecsABOB=[],this.isoVecsOBOA=[],this.isoVecsBAOA=[],this.vertexTypes=[],this.IDATA=new c("icosahedron","Regular",[[0,r.Q_,-1],[-r.Q_,1,0],[-1,0,-r.Q_],[1,0,-r.Q_],[r.Q_,1,0],[0,r.Q_,1],[-1,0,r.Q_],[-r.Q_,-1,0],[0,-r.Q_,-1],[r.Q_,-1,0],[1,0,r.Q_],[0,-r.Q_,1]],[[0,2,1],[0,3,2],[0,4,3],[0,5,4],[0,1,5],[7,6,1],[8,7,2],[9,8,3],[10,9,4],[6,10,5],[2,7,1],[3,8,2],[4,9,3],[5,10,4],[1,6,5],[11,6,7],[11,7,8],[11,8,9],[11,9,10],[11,10,6]])}setIndices(){let e=12;const t={},s=this.m,o=this.n;let r,n,l,c,h,u=s,d=1,p=0;0!==o&&(u=a.R.HCF(s,o)),d=s/u,p=o/u;const x=i.Zero(),f=new i(s,o),O=new i(-o,s+o),g=i.Zero(),m=i.Zero(),y=i.Zero();let A,v,T,P,_=[];const I=[],b=this.vertByDist,F=(s,o,a,r)=>{A=s+"|"+a,v=o+"|"+r,A in t||v in t?A in t&&!(v in t)?t[v]=t[A]:v in t&&!(A in t)&&(t[A]=t[v]):(t[A]=e,t[v]=e,e++),b[a][0]>2?I[t[A]]=[-b[a][0],b[a][1],t[A]]:I[t[A]]=[_[b[a][0]],b[a][1],t[A]]};this.IDATA.edgematch=[[1,"B"],[2,"B"],[3,"B"],[4,"B"],[0,"B"],[10,"O",14,"A"],[11,"O",10,"A"],[12,"O",11,"A"],[13,"O",12,"A"],[14,"O",13,"A"],[0,"O"],[1,"O"],[2,"O"],[3,"O"],[4,"O"],[19,"B",5,"A"],[15,"B",6,"A"],[16,"B",7,"A"],[17,"B",8,"A"],[18,"B",9,"A"]];for(let a=0;a<20;a++){if(_=this.IDATA.face[a],l=_[2],c=_[1],h=_[0],T=x.x+"|"+x.y,A=a+"|"+T,A in t||(t[A]=l,I[l]=[_[b[T][0]],b[T][1]]),T=f.x+"|"+f.y,A=a+"|"+T,A in t||(t[A]=c,I[c]=[_[b[T][0]],b[T][1]]),T=O.x+"|"+O.y,A=a+"|"+T,A in t||(t[A]=h,I[h]=[_[b[T][0]],b[T][1]]),r=this.IDATA.edgematch[a][0],n=this.IDATA.edgematch[a][1],"B"===n)for(let e=1;e<u;e++)m.x=s-e*(d+p),m.y=o+e*d,y.x=-e*p,y.y=e*(d+p),T=m.x+"|"+m.y,P=y.x+"|"+y.y,F(a,r,T,P);if("O"===n)for(let e=1;e<u;e++)y.x=-e*p,y.y=e*(d+p),g.x=e*d,g.y=e*p,T=y.x+"|"+y.y,P=g.x+"|"+g.y,F(a,r,T,P);if(r=this.IDATA.edgematch[a][2],n=this.IDATA.edgematch[a][3],n&&"A"===n)for(let e=1;e<u;e++)g.x=e*d,g.y=e*p,m.x=s-(u-e)*(d+p),m.y=o+(u-e)*d,T=g.x+"|"+g.y,P=m.x+"|"+m.y,F(a,r,T,P);for(let s=0;s<this.vertices.length;s++)T=this.vertices[s].x+"|"+this.vertices[s].y,A=a+"|"+T,A in t||(t[A]=e++,b[T][0]>2?I[t[A]]=[-b[T][0],b[T][1],t[A]]:I[t[A]]=[_[b[T][0]],b[T][1],t[A]])}this.closestTo=I,this.vecToidx=t}calcCoeffs(){const e=this.m,t=this.n,s=Math.sqrt(3)/3,o=e*e+t*t+e*t;this.coau=(e+t)/o,this.cobu=-t/o,this.coav=-s*(e-t)/o,this.cobv=s*(2*e+t)/o}createInnerFacets(){const e=this.m,t=this.n;for(let s=0;s<t+e+1;s++)for(let e=this.min[s];e<this.max[s]+1;e++)e<this.max[s]&&e<this.max[s+1]+1&&this.innerFacets.push(["|"+e+"|"+s,"|"+e+"|"+(s+1),"|"+(e+1)+"|"+s]),s>0&&e<this.max[s-1]&&e+1<this.max[s]+1&&this.innerFacets.push(["|"+e+"|"+s,"|"+(e+1)+"|"+s,"|"+(e+1)+"|"+(s-1)])}edgeVecsABOB(){const e=this.m,t=this.n,s=new i(-t,e+t);for(let o=1;o<e+t;o++){const e=new i(this.min[o],o),t=new i(this.min[o-1],o-1),a=new i(this.min[o+1],o+1),r=e.clone(),n=t.clone(),l=a.clone();r.rotate60About(s),n.rotate60About(s),l.rotate60About(s);const c=new i(this.max[r.y],r.y),h=new i(this.max[r.y-1],r.y-1),u=new i(this.max[r.y-1]-1,r.y-1);r.x===c.x&&r.y===c.y||(r.x!==h.x?(this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([e,h,u]),this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([e,u,c])):r.y===l.y?(this.vertexTypes.push([1,1,0]),this.isoVecsABOB.push([e,t,h]),this.vertexTypes.push([1,0,1]),this.isoVecsABOB.push([e,h,a])):(this.vertexTypes.push([1,1,0]),this.isoVecsABOB.push([e,t,h]),this.vertexTypes.push([1,0,0]),this.isoVecsABOB.push([e,h,c])))}}mapABOBtoOBOA(){const e=new i(0,0);for(let t=0;t<this.isoVecsABOB.length;t++){const s=[];for(let o=0;o<3;o++)e.x=this.isoVecsABOB[t][o].x,e.y=this.isoVecsABOB[t][o].y,0===this.vertexTypes[t][o]&&e.rotateNeg120(this.m,this.n),s.push(e.clone());this.isoVecsOBOA.push(s)}}mapABOBtoBAOA(){const e=new i(0,0);for(let t=0;t<this.isoVecsABOB.length;t++){const s=[];for(let o=0;o<3;o++)e.x=this.isoVecsABOB[t][o].x,e.y=this.isoVecsABOB[t][o].y,1===this.vertexTypes[t][o]&&e.rotate120(this.m,this.n),s.push(e.clone());this.isoVecsBAOA.push(s)}}MapToFace(e,t){const s=this.IDATA.face[e],a=s[2],r=s[1],n=s[0],i=o.P.FromArray(this.IDATA.vertex[a]),l=o.P.FromArray(this.IDATA.vertex[r]),c=o.P.FromArray(this.IDATA.vertex[n]),h=l.subtract(i),u=c.subtract(i),d=h.scale(this.coau).add(u.scale(this.cobu)),p=h.scale(this.coav).add(u.scale(this.cobv)),x=[];let f,O=o.jp.Vector3[0];for(let s=0;s<this.cartesian.length;s++)O=d.scale(this.cartesian[s].x).add(p.scale(this.cartesian[s].y)).add(i),x[s]=[O.x,O.y,O.z],f=e+"|"+this.vertices[s].x+"|"+this.vertices[s].y,t.vertex[this.vecToidx[f]]=[O.x,O.y,O.z]}build(e,t){const s=new Array,o=i.Zero(),r=new i(e,t),n=new i(-t,e+t);s.push(o,r,n);for(let o=t;o<e+1;o++)for(let t=0;t<e+1-o;t++)s.push(new i(t,o));if(t>0){const o=a.R.HCF(e,t),r=e/o,n=t/o;for(let a=1;a<o;a++)s.push(new i(a*r,a*n)),s.push(new i(-a*n,a*(r+n))),s.push(new i(e-a*(r+n),t+a*r));const l=e/t;for(let o=1;o<t;o++)for(let a=0;a<o*l;a++)s.push(new i(a,o)),s.push(new i(a,o).rotate120(e,t)),s.push(new i(a,o).rotateNeg120(e,t))}s.sort(((e,t)=>e.x-t.x)),s.sort(((e,t)=>e.y-t.y));const l=new Array(e+t+1),c=new Array(e+t+1);for(let e=0;e<l.length;e++)l[e]=1/0,c[e]=-1/0;let h=0,u=0;const d=s.length;for(let e=0;e<d;e++)u=s[e].x,h=s[e].y,l[h]=Math.min(u,l[h]),c[h]=Math.max(u,c[h]);const p=(s,o)=>{const a=s.clone();return"A"===o&&a.rotateNeg120(e,t),"B"===o&&a.rotate120(e,t),a.x<0?a.y:a.x+a.y},x=[],f=[],O=[],g=[],m={},y=[];let A=-1,v=-1;for(let e=0;e<d;e++)x[e]=s[e].toCartesianOrigin(new i(0,0),.5),f[e]=p(s[e],"O"),O[e]=p(s[e],"A"),g[e]=p(s[e],"B"),f[e]===O[e]&&O[e]===g[e]?(A=3,v=f[e]):f[e]===O[e]?(A=4,v=f[e]):O[e]===g[e]?(A=5,v=O[e]):g[e]===f[e]&&(A=6,v=f[e]),f[e]<O[e]&&f[e]<g[e]&&(A=2,v=f[e]),O[e]<f[e]&&O[e]<g[e]&&(A=1,v=O[e]),g[e]<O[e]&&g[e]<f[e]&&(A=0,v=g[e]),y.push([A,v,s[e].x,s[e].y]);y.sort(((e,t)=>e[2]-t[2])),y.sort(((e,t)=>e[3]-t[3])),y.sort(((e,t)=>e[1]-t[1])),y.sort(((e,t)=>e[0]-t[0]));for(let e=0;e<y.length;e++)m[y[e][2]+"|"+y[e][3]]=[y[e][0],y[e][1],e];return this.m=e,this.n=t,this.vertices=s,this.vertByDist=m,this.cartesian=x,this.min=l,this.max=c,this}}class c{constructor(e,t,s,o){this.name=e,this.category=t,this.vertex=s,this.face=o}}class h extends c{innerToData(e,t){for(let s=0;s<t.innerFacets.length;s++)this.face.push(t.innerFacets[s].map((s=>t.vecToidx[e+s])))}mapABOBtoDATA(e,t){const s=t.IDATA.edgematch[e][0];for(let o=0;o<t.isoVecsABOB.length;o++){const a=[];for(let r=0;r<3;r++)0===t.vertexTypes[o][r]?a.push(e+"|"+t.isoVecsABOB[o][r].x+"|"+t.isoVecsABOB[o][r].y):a.push(s+"|"+t.isoVecsABOB[o][r].x+"|"+t.isoVecsABOB[o][r].y);this.face.push([t.vecToidx[a[0]],t.vecToidx[a[1]],t.vecToidx[a[2]]])}}mapOBOAtoDATA(e,t){const s=t.IDATA.edgematch[e][0];for(let o=0;o<t.isoVecsOBOA.length;o++){const a=[];for(let r=0;r<3;r++)1===t.vertexTypes[o][r]?a.push(e+"|"+t.isoVecsOBOA[o][r].x+"|"+t.isoVecsOBOA[o][r].y):a.push(s+"|"+t.isoVecsOBOA[o][r].x+"|"+t.isoVecsOBOA[o][r].y);this.face.push([t.vecToidx[a[0]],t.vecToidx[a[1]],t.vecToidx[a[2]]])}}mapBAOAtoDATA(e,t){const s=t.IDATA.edgematch[e][2];for(let o=0;o<t.isoVecsBAOA.length;o++){const a=[];for(let r=0;r<3;r++)1===t.vertexTypes[o][r]?a.push(e+"|"+t.isoVecsBAOA[o][r].x+"|"+t.isoVecsBAOA[o][r].y):a.push(s+"|"+t.isoVecsBAOA[o][r].x+"|"+t.isoVecsBAOA[o][r].y);this.face.push([t.vecToidx[a[0]],t.vecToidx[a[1]],t.vecToidx[a[2]]])}}orderData(e){const t=[];for(let e=0;e<13;e++)t[e]=[];const s=e.closestTo;for(let e=0;e<s.length;e++)s[e][0]>-1?s[e][1]>0&&t[s[e][0]].push([e,s[e][1]]):t[12].push([e,s[e][0]]);const o=[];for(let e=0;e<12;e++)o[e]=e;let a=12;for(let e=0;e<12;e++){t[e].sort(((e,t)=>e[1]-t[1]));for(let s=0;s<t[e].length;s++)o[t[e][s][0]]=a++}for(let e=0;e<t[12].length;e++)o[t[12][e][0]]=a++;for(let e=0;e<this.vertex.length;e++)this.vertex[e].push(o[e]);this.vertex.sort(((e,t)=>e[3]-t[3]));for(let e=0;e<this.vertex.length;e++)this.vertex[e].pop();for(let e=0;e<this.face.length;e++)for(let t=0;t<this.face[e].length;t++)this.face[e][t]=o[this.face[e][t]];this.sharedNodes=t[12].length,this.poleNodes=this.vertex.length-this.sharedNodes}setOrder(e,t){const s=[],o=[];let a=t.pop();o.push(a);let r=this.face[a].indexOf(e);r=(r+2)%3;let n=this.face[a][r];s.push(n);let i=0;for(;t.length>0;)a=t[i],this.face[a].indexOf(n)>-1?(r=(this.face[a].indexOf(n)+1)%3,n=this.face[a][r],s.push(n),o.push(a),t.splice(i,1),i=0):i++;return this.adjacentFaces.push(s),o}toGoldbergPolyhedronData(){const e=new c("GeoDual","Goldberg",[],[]);e.name="GD dual";const t=this.vertex.length,s=new Array(t);for(let e=0;e<t;e++)s[e]=[];for(let e=0;e<this.face.length;e++)for(let t=0;t<3;t++)s[this.face[e][t]].push(e);let o=0,a=0,r=0,n=[],i=[];this.adjacentFaces=[];for(let t=0;t<s.length;t++)e.face[t]=this.setOrder(t,s[t].concat([])),s[t].forEach((t=>{o=0,a=0,r=0,n=this.face[t];for(let e=0;e<3;e++)i=this.vertex[n[e]],o+=i[0],a+=i[1],r+=i[2];e.vertex[t]=[o/3,a/3,r/3]}));return e}static BuildGeodesicData(e){const t=new h("Geodesic-m-n","Geodesic",[[0,r.Q_,-1],[-r.Q_,1,0],[-1,0,-r.Q_],[1,0,-r.Q_],[r.Q_,1,0],[0,r.Q_,1],[-1,0,r.Q_],[-r.Q_,-1,0],[0,-r.Q_,-1],[r.Q_,-1,0],[1,0,r.Q_],[0,-r.Q_,1]],[]);e.setIndices(),e.calcCoeffs(),e.createInnerFacets(),e.edgeVecsABOB(),e.mapABOBtoOBOA(),e.mapABOBtoBAOA();for(let s=0;s<e.IDATA.face.length;s++)e.MapToFace(s,t),t.innerToData(s,e),"B"===e.IDATA.edgematch[s][1]&&t.mapABOBtoDATA(s,e),"O"===e.IDATA.edgematch[s][1]&&t.mapOBOAtoDATA(s,e),"A"===e.IDATA.edgematch[s][3]&&t.mapBAOAtoDATA(s,e);return t.orderData(e),t.vertex=t.vertex.map((function(e){const t=e[0],s=e[1],o=e[2],a=Math.sqrt(t*t+s*s+o*o);return e[0]*=1/a,e[1]*=1/a,e[2]*=1/a,e})),t}}},9044:(e,t,s)=>{s.d(t,{R:()=>l});var o=s(972),a=s(7959),r=s(3632),n=s(9859),i=s(9288);r.Kj._GoldbergMeshParser=(e,t)=>l.Parse(e,t);class l extends r.Kj{constructor(){super(...arguments),this.goldbergData={faceColors:[],faceCenters:[],faceZaxis:[],faceXaxis:[],faceYaxis:[],nbSharedFaces:0,nbUnsharedFaces:0,nbFaces:0,nbFacesAtPole:0,adjacentFaces:[]}}relatedGoldbergFace(e,t){return void 0===t?(e>this.goldbergData.nbUnsharedFaces-1&&(i.Y.Warn("Maximum number of unshared faces used"),e=this.goldbergData.nbUnsharedFaces-1),this.goldbergData.nbUnsharedFaces+e):(e>11&&(i.Y.Warn("Last pole used"),e=11),t>this.goldbergData.nbFacesAtPole-1&&(i.Y.Warn("Maximum number of faces at a pole used"),t=this.goldbergData.nbFacesAtPole-1),12+e*this.goldbergData.nbFacesAtPole+t)}_changeGoldbergFaceColors(e){for(let t=0;t<e.length;t++){const s=e[t][0],o=e[t][1],a=e[t][2];for(let e=s;e<o+1;e++)this.goldbergData.faceColors[e]=a}const t=[];for(let e=0;e<12;e++)for(let s=0;s<5;s++)t.push(this.goldbergData.faceColors[e].r,this.goldbergData.faceColors[e].g,this.goldbergData.faceColors[e].b,this.goldbergData.faceColors[e].a);for(let e=12;e<this.goldbergData.faceColors.length;e++)for(let s=0;s<6;s++)t.push(this.goldbergData.faceColors[e].r,this.goldbergData.faceColors[e].g,this.goldbergData.faceColors[e].b,this.goldbergData.faceColors[e].a);return t}setGoldbergFaceColors(e){const t=this._changeGoldbergFaceColors(e);this.setVerticesData(a.o.ColorKind,t)}updateGoldbergFaceColors(e){const t=this._changeGoldbergFaceColors(e);this.updateVerticesData(a.o.ColorKind,t)}_changeGoldbergFaceUVs(e){const t=this.getVerticesData(a.o.UVKind);for(let s=0;s<e.length;s++){const o=e[s][0],a=e[s][1],r=e[s][2],n=e[s][3],i=e[s][4],l=[],c=[];let h,u;for(let e=0;e<5;e++)h=r.x+n*Math.cos(i+e*Math.PI/2.5),u=r.y+n*Math.sin(i+e*Math.PI/2.5),h<0&&(h=0),h>1&&(h=1),l.push(h,u);for(let e=0;e<6;e++)h=r.x+n*Math.cos(i+e*Math.PI/3),u=r.y+n*Math.sin(i+e*Math.PI/3),h<0&&(h=0),h>1&&(h=1),c.push(h,u);for(let e=o;e<Math.min(12,a+1);e++)for(let s=0;s<5;s++)t[10*e+2*s]=l[2*s],t[10*e+2*s+1]=l[2*s+1];for(let e=Math.max(12,o);e<a+1;e++)for(let s=0;s<6;s++)t[12*e-24+2*s]=c[2*s],t[12*e-23+2*s]=c[2*s+1]}return t}setGoldbergFaceUVs(e){const t=this._changeGoldbergFaceUVs(e);this.setVerticesData(a.o.UVKind,t)}updateGoldbergFaceUVs(e){const t=this._changeGoldbergFaceUVs(e);this.updateVerticesData(a.o.UVKind,t)}placeOnGoldbergFaceAt(e,t,s){const a=o.P.RotationFromAxis(this.goldbergData.faceXaxis[t],this.goldbergData.faceYaxis[t],this.goldbergData.faceZaxis[t]);e.rotation=a,e.position=this.goldbergData.faceCenters[t].add(this.goldbergData.faceXaxis[t].scale(s.x)).add(this.goldbergData.faceYaxis[t].scale(s.y)).add(this.goldbergData.faceZaxis[t].scale(s.z))}serialize(e){super.serialize(e),e.type="GoldbergMesh";const t={};if(t.adjacentFaces=this.goldbergData.adjacentFaces,t.nbSharedFaces=this.goldbergData.nbSharedFaces,t.nbUnsharedFaces=this.goldbergData.nbUnsharedFaces,t.nbFaces=this.goldbergData.nbFaces,t.nbFacesAtPole=this.goldbergData.nbFacesAtPole,this.goldbergData.faceColors){t.faceColors=[];for(const e of this.goldbergData.faceColors)t.faceColors.push(e.asArray())}if(this.goldbergData.faceCenters){t.faceCenters=[];for(const e of this.goldbergData.faceCenters)t.faceCenters.push(e.asArray())}if(this.goldbergData.faceZaxis){t.faceZaxis=[];for(const e of this.goldbergData.faceZaxis)t.faceZaxis.push(e.asArray())}if(this.goldbergData.faceYaxis){t.faceYaxis=[];for(const e of this.goldbergData.faceYaxis)t.faceYaxis.push(e.asArray())}if(this.goldbergData.faceXaxis){t.faceXaxis=[];for(const e of this.goldbergData.faceXaxis)t.faceXaxis.push(e.asArray())}e.goldbergData=t}static Parse(e,t){const s=e.goldbergData;s.faceColors=s.faceColors.map((e=>n.HE.FromArray(e))),s.faceCenters=s.faceCenters.map((e=>o.P.FromArray(e))),s.faceZaxis=s.faceZaxis.map((e=>o.P.FromArray(e))),s.faceXaxis=s.faceXaxis.map((e=>o.P.FromArray(e))),s.faceYaxis=s.faceYaxis.map((e=>o.P.FromArray(e)));const a=new l(e.name,t);return a.goldbergData=s,a}}},9823:(e,t,s)=>{s.d(t,{V:()=>I});var o=s(7079),a=s(8128),r=s(8110),n=s(6435),i=s(6765),l=s(6565),c=s(2005),h=s(9945),u=s(1528),d=s(7700),p=s(9590),x=s(6755),f=s(6654),O=s(1694),g=s(307),m=s(6540),y=s(2758),A=s(6377),v=s(1724),T=s(7966),P=s(9609),_=s(3546);const I={CreateBox:r.NR,CreateTiledBox:n.cQ,CreateSphere:i.Qk,CreateDisc:a.uH,CreateIcoSphere:A.Au,CreateRibbon:o.LY,CreateCylinder:l.wf,CreateTorus:c.eu,CreateTorusKnot:h.eB,CreateLineSystem:u.xW,CreateLines:u.nL,CreateDashedLines:u.Gz,ExtrudeShape:p.Gc,ExtrudeShapeCustom:p.bC,CreateLathe:x.O,CreateTiledPlane:O.KA,CreatePlane:f.pT,CreateGround:g.$6,CreateTiledGround:g.DG,CreateGroundFromHeightMap:g.W,CreatePolygon:d.a4,ExtrudePolygon:d.Yo,CreateTube:m._,CreatePolyhedron:y.sh,CreateGeodesic:P.M,CreateGoldberg:_._,CreateDecal:v.t,CreateCapsule:T.iz}},540:(e,t,s)=>{s.d(t,{m:()=>p,z:()=>x});var o=s(9288),a=s(972),r=s(7959),n=s(3632),i=s(4517),l=s(1021),c=s(7786),h=s(78);class u extends a.FM{constructor(e,t){super(e.x,e.y),this.index=t}}class d{constructor(){this.elements=new Array}add(e){const t=new Array;return e.forEach((e=>{const s=new u(e,this.elements.length);t.push(s),this.elements.push(s)})),t}computeBounds(){const e=new a.FM(this.elements[0].x,this.elements[0].y),t=new a.FM(this.elements[0].x,this.elements[0].y);return this.elements.forEach((s=>{s.x<e.x?e.x=s.x:s.x>t.x&&(t.x=s.x),s.y<e.y?e.y=s.y:s.y>t.y&&(t.y=s.y)})),{min:e,max:t,width:t.x-e.x,height:t.y-e.y}}}class p{static Rectangle(e,t,s,o){return[new a.FM(e,t),new a.FM(s,t),new a.FM(s,o),new a.FM(e,o)]}static Circle(e,t=0,s=0,o=32){const r=new Array;let n=0;const i=2*Math.PI/o;for(let l=0;l<o;l++)r.push(new a.FM(t+Math.cos(n)*e,s+Math.sin(n)*e)),n-=i;return r}static Parse(e){const t=e.split(/[^-+eE.\d]+/).map(parseFloat).filter((e=>!isNaN(e)));let s;const o=[];for(s=0;s<(2147483646&t.length);s+=2)o.push(new a.FM(t[s],t[s+1]));return o}static StartingAt(e,t){return l.ZZ.StartingAt(e,t)}}class x{constructor(e,t,s,a=earcut){let r;this._points=new d,this._outlinepoints=new d,this._holes=new Array,this._epoints=new Array,this._eholes=new Array,this.bjsEarcut=a,this._name=e,this._scene=s||h.l.LastCreatedScene,r=t instanceof l.ZZ?t.getPoints():t,this._addToepoint(r),this._points.add(r),this._outlinepoints.add(r),void 0===this.bjsEarcut&&o.Y.Warn("Earcut was not found, the polygon will not be built.")}_addToepoint(e){for(const t of e)this._epoints.push(t.x,t.y)}addHole(e){this._points.add(e);const t=new d;return t.add(e),this._holes.push(t),this._eholes.push(this._epoints.length/2),this._addToepoint(e),this}build(e=!1,t=0,s=2){const o=new n.Kj(this._name,this._scene),a=this.buildVertexData(t,s);return o.setVerticesData(r.o.PositionKind,a.positions,e),o.setVerticesData(r.o.NormalKind,a.normals,e),o.setVerticesData(r.o.UVKind,a.uvs,e),o.setIndices(a.indices),o}buildVertexData(e=0,t=2){const s=new i.x,o=new Array,a=new Array,r=new Array,n=this._points.computeBounds();this._points.elements.forEach((e=>{o.push(0,1,0),a.push(e.x,0,e.y),r.push((e.x-n.min.x)/n.width,(e.y-n.min.y)/n.height)}));const l=new Array,c=this.bjsEarcut(this._epoints,this._eholes,2);for(let e=0;e<c.length;e++)l.push(c[e]);if(e>0){const s=a.length/3;this._points.elements.forEach((t=>{o.push(0,-1,0),a.push(t.x,-e,t.y),r.push(1-(t.x-n.min.x)/n.width,1-(t.y-n.min.y)/n.height)}));const i=l.length;for(let e=0;e<i;e+=3){const t=l[e+0],o=l[e+1],a=l[e+2];l.push(a+s),l.push(o+s),l.push(t+s)}this._addSide(a,o,r,l,n,this._outlinepoints,e,!1,t),this._holes.forEach((s=>{this._addSide(a,o,r,l,n,s,e,!0,t)}))}return s.indices=l,s.positions=a,s.normals=o,s.uvs=r,s}_addSide(e,t,s,o,r,n,i,l,h){let u=e.length/3,d=0;for(let p=0;p<n.elements.length;p++){const x=n.elements[p],f=n.elements[(p+1)%n.elements.length];e.push(x.x,0,x.y),e.push(x.x,-i,x.y),e.push(f.x,0,f.y),e.push(f.x,-i,f.y);const O=n.elements[(p+n.elements.length-1)%n.elements.length],g=n.elements[(p+2)%n.elements.length];let m=new a.P(-(f.y-x.y),0,f.x-x.x),y=new a.P(-(x.y-O.y),0,x.x-O.x),A=new a.P(-(g.y-f.y),0,g.x-f.x);l||(m=m.scale(-1),y=y.scale(-1),A=A.scale(-1));const v=m.normalizeToNew();let T=y.normalizeToNew(),P=A.normalizeToNew();const _=a.P.Dot(T,v);T=_>h?_<c.kn-1?new a.P(x.x,0,x.y).subtract(new a.P(f.x,0,f.y)).normalize():y.add(m).normalize():v;const I=a.P.Dot(A,m);P=I>h?I<c.kn-1?new a.P(f.x,0,f.y).subtract(new a.P(x.x,0,x.y)).normalize():A.add(m).normalize():v,s.push(d/r.width,0),s.push(d/r.width,1),d+=m.length(),s.push(d/r.width,0),s.push(d/r.width,1),t.push(T.x,T.y,T.z),t.push(T.x,T.y,T.z),t.push(P.x,P.y,P.z),t.push(P.x,P.y,P.z),l?(o.push(u),o.push(u+2),o.push(u+1),o.push(u+1),o.push(u+2),o.push(u+3)):(o.push(u),o.push(u+1),o.push(u+2),o.push(u+1),o.push(u+3),o.push(u+2)),u+=4}}}}}]);
//# sourceMappingURL=721.babylonBundle.js.map